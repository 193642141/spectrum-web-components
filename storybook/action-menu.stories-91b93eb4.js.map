{"version":3,"file":"action-menu.stories-91b93eb4.js","sources":["../../../packages/action-menu/lib/action-menu.css.js","../../../packages/action-menu/lib/action-menu.js","../../../packages/action-menu/lib/index.js","../../../packages/action-menu/stories/index.js","../../../packages/action-menu/stories/action-menu.stories.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n#button{width:auto}.icon{width:18px;height:18px;flex-shrink:0}#popover{width:auto;max-width:none}\n`;\nexport default styles;\n//# sourceMappingURL=action-menu.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { property, html, } from 'lit-element';\nimport { DropdownBase } from '@spectrum-web-components/dropdown';\nimport { ObserveSlotText } from '@spectrum-web-components/shared/lib/observe-slot-text';\nimport actionMenuStyles from './action-menu.css.js';\n/**\n * @slot options - The menu with options that will display when the dropdown is open\n */\nexport class ActionMenu extends ObserveSlotText(DropdownBase) {\n    constructor() {\n        super(...arguments);\n        this.selected = false;\n        this.quiet = true;\n        this.listRole = 'menu';\n        this.itemRole = 'menuitem';\n    }\n    static get styles() {\n        return [...super.styles, actionMenuStyles];\n    }\n    get hasLabel() {\n        return this.slotHasContent;\n    }\n    get buttonContent() {\n        return [\n            html `\n                <slot name=\"icon\">\n                    <svg\n                        slot=\"icon\"\n                        viewBox=\"0 0 36 36\"\n                        class=\"icon\"\n                        focusable=\"false\"\n                        aria-hidden=\"true\"\n                        fill=\"currentColor\"\n                    >\n                        <circle cx=\"17.8\" cy=\"18.2\" r=\"3.4\"></circle>\n                        <circle cx=\"29.5\" cy=\"18.2\" r=\"3.4\"></circle>\n                        <circle cx=\"6.1\" cy=\"18.2\" r=\"3.4\"></circle>\n                    </svg>\n                </slot>\n                <div id=\"label\" ?hidden=${!this.hasLabel}>\n                    <slot\n                        id=\"slot\"\n                        @slotchange=${this.manageObservedSlot}\n                    ></slot>\n                </div>\n            `,\n        ];\n    }\n    updated(changedProperties) {\n        super.updated(changedProperties);\n        if (changedProperties.has('open')) {\n            this.selected = this.open;\n        }\n        if (changedProperties.has('quiet')) {\n            this.quiet = true;\n        }\n        if (changedProperties.has('invalid')) {\n            this.invalid = false;\n        }\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ActionMenu.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ActionMenu.prototype, \"quiet\", void 0);\n//# sourceMappingURL=action-menu.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport * from './action-menu.js';\nimport { ActionMenu } from './action-menu.js';\n/* istanbul ignore else */\nif (!customElements.get('sp-action-menu')) {\n    customElements.define('sp-action-menu', ActionMenu);\n}\n//# sourceMappingURL=index.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html } from 'lit-html';\nexport const ActionMenuMarkup = ({ ariaLabel = 'More Actions', changeHandler = (() => undefined), disabled = false, visibleLabel = '', } = {}) => {\n    return html `\n        <sp-action-menu\n            label=${ariaLabel}\n            ?disabled=${disabled}\n            @change=\"${changeHandler}\"\n        >\n            ${visibleLabel}\n            <sp-menu slot=\"options\">\n                <sp-menu-item>\n                    Deselect\n                </sp-menu-item>\n                <sp-menu-item>\n                    Select Inverse\n                </sp-menu-item>\n                <sp-menu-item>\n                    Feather...\n                </sp-menu-item>\n                <sp-menu-item>\n                    Select and Mask...\n                </sp-menu-item>\n                <sp-menu-divider></sp-menu-divider>\n                <sp-menu-item>\n                    Save Selection\n                </sp-menu-item>\n                <sp-menu-item disabled>\n                    Make Work Path\n                </sp-menu-item>\n            </sp-menu>\n        </sp-action-menu>\n    `;\n};\n//# sourceMappingURL=index.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, action, boolean, text } from '@open-wc/demoing-storybook';\nimport '../';\nimport '../../menu';\nimport '../../menu-item';\nimport { ActionMenuMarkup } from './';\nexport default {\n    component: 'sp-action-menu',\n    title: 'Action menu',\n};\nexport const iconOnly = () => html `\n    <style>\n        sp-menu {\n            min-width: 125px;\n        }\n    </style>\n    ${ActionMenuMarkup()}\n`;\nexport const Default = () => {\n    const ariaLabel = text('Arial Label', 'More Actions', 'Component');\n    const visibleLabel = text('Visible Label', 'More Actions', 'Component');\n    const disabled = boolean('Is Disabled', false, 'Component');\n    const changeHandler = (event) => {\n        const actionMenu = event.target;\n        action(`Change: ${actionMenu.value}`)();\n    };\n    return ActionMenuMarkup({\n        ariaLabel,\n        disabled,\n        changeHandler,\n        visibleLabel,\n    });\n};\n//# sourceMappingURL=action-menu.stories.js.map"],"names":["styles","css","ActionMenu","ObserveSlotText","DropdownBase","[object Object]","selected","quiet","listRole","itemRole","super","actionMenuStyles","this","slotHasContent","html","hasLabel","manageObservedSlot","changedProperties","updated","has","open","invalid","__decorate","property","type","Boolean","reflect","customElements","get","define","ActionMenuMarkup","ariaLabel","changeHandler","undefined","disabled","visibleLabel","Default","text","actionMenu","action","component","title"],"mappings":"ohBAYA,IAAMA,EAASC,CAAG,oGCcZ,MAAOC,UAAmBC,EAAgBC,IAAhDC,uCAMWC,UAAW,OAGXC,OAAQ,OAELC,SAAW,YACXC,SAAW,qCAVV,IAAIC,MAAMV,OAAQW,yBAYlBC,KAAKC,yCAIL,CACHC,CAAI,qTAe2BF,KAAKG,2CAGVH,KAAKI,uCAO7BX,QAAQY,SACRC,QAAQD,GACVA,EAAkBE,IAAI,eACjBb,SAAWM,KAAKQ,MAErBH,EAAkBE,IAAI,gBACjBZ,OAAQ,GAEbU,EAAkBE,IAAI,kBACjBE,SAAU,IA/CvBC,EAAA,CADCC,EAAS,CAAEC,KAAMC,QAASC,SAAS,oCAIpCJ,EAAA,CADCC,EAAS,CAAEC,KAAMC,QAASC,SAAS,iCClBnCC,eAAeC,IAAI,mBACpBD,eAAeE,OAAO,iBAAkB3B,GCN5C,IAEa4B,EAAmB,EAC5BC,UAAAA,EAAY,eACZC,cAAAA,EAAiB,UAAMC,GACvBC,SAAAA,GAAW,EACXC,aAAAA,EAAe,IACf,KACOrB,CAAI,2BAEKiB,iBACIG,eACDF,OAETG;;;;;;MCMRL;EAGOM,EAAU,uDAEbD,EAAeE,8CACfH,4CAMFH,UAAAA,mCAJMO,WACNC,EAAO,qBAAPA,6DApBO,CACXC,2BACAC,MAAO"}