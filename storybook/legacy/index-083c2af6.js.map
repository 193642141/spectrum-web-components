{"version":3,"file":"index-083c2af6.js","sources":["../../../../node_modules/lit-element/lib/decorators.js","../../../../node_modules/lit-element/lib/updating-element.js","../../../../node_modules/lit-element/lib/css-tag.js","../../../../node_modules/lit-element/lit-element.js","../../../../packages/theme/lib/theme.css.js","../../../../packages/theme/lib/theme.js","../../../../packages/theme/lib/theme-dark.css.js","../../../../packages/theme/lib/theme-dark.js","../../../../packages/theme/lib/theme-light.css.js","../../../../packages/theme/lib/theme-light.js","../../../../packages/theme/lib/theme-lightest.css.js","../../../../packages/theme/lib/theme-lightest.js","../../../../packages/theme/lib/scale-medium.css.js","../../../../packages/theme/lib/scale-medium.js","../../../../packages/theme/lib/scale-large.css.js","../../../../packages/theme/lib/scale-large.js","../../../../packages/theme/lib/index.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-animation-duration-0:0ms;--spectrum-global-animation-duration-100:130ms;--spectrum-global-animation-duration-200:160ms;--spectrum-global-animation-duration-300:190ms;--spectrum-global-animation-duration-400:220ms;--spectrum-global-animation-duration-500:250ms;--spectrum-global-animation-duration-600:300ms;--spectrum-global-animation-duration-700:350ms;--spectrum-global-animation-duration-800:400ms;--spectrum-global-animation-duration-900:450ms;--spectrum-global-animation-duration-1000:500ms;--spectrum-global-animation-duration-2000:1000ms;--spectrum-global-animation-duration-4000:2000ms;--spectrum-global-animation-ease-in-out:cubic-bezier(0.45,0,0.4,1);--spectrum-global-animation-ease-in:cubic-bezier(0.5,0,1,1);--spectrum-global-animation-ease-out:cubic-bezier(0,0,0.4,1);--spectrum-global-animation-linear:cubic-bezier(0,0,1,1);--spectrum-global-color-static-black:#000;--spectrum-global-color-static-white:#fff;--spectrum-global-color-static-blue:#1473e6;--spectrum-global-color-static-gray-50:#fff;--spectrum-global-color-static-gray-75:#fff;--spectrum-global-color-static-gray-100:#fff;--spectrum-global-color-static-gray-200:#f4f4f4;--spectrum-global-color-static-gray-300:#eaeaea;--spectrum-global-color-static-gray-400:#d3d3d3;--spectrum-global-color-static-gray-500:#bcbcbc;--spectrum-global-color-static-gray-600:#959595;--spectrum-global-color-static-gray-700:#747474;--spectrum-global-color-static-gray-800:#505050;--spectrum-global-color-static-gray-900:#323232;--spectrum-global-color-static-blue-200:#5aa9fa;--spectrum-global-color-static-blue-300:#4b9cf5;--spectrum-global-color-static-blue-400:#378ef0;--spectrum-global-color-static-blue-500:#2680eb;--spectrum-global-color-static-blue-600:#1473e6;--spectrum-global-color-static-blue-700:#0d66d0;--spectrum-global-color-static-red-400:#ec5b62;--spectrum-global-color-static-red-500:#e34850;--spectrum-global-color-static-red-600:#d7373f;--spectrum-global-color-static-red-700:#c9252d;--spectrum-global-color-static-orange-400:#f29423;--spectrum-global-color-static-orange-500:#e68619;--spectrum-global-color-static-orange-600:#da7b11;--spectrum-global-color-static-orange-700:#cb6f10;--spectrum-global-color-static-green-400:#33ab84;--spectrum-global-color-static-green-500:#2d9d78;--spectrum-global-color-static-green-600:#268e6c;--spectrum-global-color-static-green-700:#12805c;--spectrum-global-color-static-celery-200:#58e06f;--spectrum-global-color-static-celery-300:#51d267;--spectrum-global-color-static-celery-400:#4bc35f;--spectrum-global-color-static-celery-500:#44b556;--spectrum-global-color-static-celery-600:#3da74e;--spectrum-global-color-static-celery-700:#379947;--spectrum-global-color-static-chartreuse-300:#9bec54;--spectrum-global-color-static-chartreuse-400:#8ede49;--spectrum-global-color-static-chartreuse-500:#85d044;--spectrum-global-color-static-chartreuse-600:#7cc33f;--spectrum-global-color-static-chartreuse-700:#73b53a;--spectrum-global-color-static-yellow-200:#ffe22e;--spectrum-global-color-static-yellow-300:#fad900;--spectrum-global-color-static-yellow-400:#edcc00;--spectrum-global-color-static-yellow-500:#dfbf00;--spectrum-global-color-static-yellow-600:#d2b200;--spectrum-global-color-static-yellow-700:#c4a600;--spectrum-global-color-static-magenta-200:#f56bb7;--spectrum-global-color-static-magenta-300:#ec5aaa;--spectrum-global-color-static-magenta-400:#e2499d;--spectrum-global-color-static-magenta-500:#d83790;--spectrum-global-color-static-magenta-600:#ca2982;--spectrum-global-color-static-magenta-700:#bc1c74;--spectrum-global-color-static-fuchsia-400:#cf3edc;--spectrum-global-color-static-fuchsia-500:#c038cc;--spectrum-global-color-static-fuchsia-600:#b130bd;--spectrum-global-color-static-fuchsia-700:#a228ad;--spectrum-global-color-static-purple-400:#9d64e1;--spectrum-global-color-static-purple-500:#9256d9;--spectrum-global-color-static-purple-600:#864ccc;--spectrum-global-color-static-purple-700:#7a42bf;--spectrum-global-color-static-purple-800:#6f38b1;--spectrum-global-color-static-indigo-200:#9090fa;--spectrum-global-color-static-indigo-300:#8282f6;--spectrum-global-color-static-indigo-400:#7575f1;--spectrum-global-color-static-indigo-500:#6767ec;--spectrum-global-color-static-indigo-600:#5c5ce0;--spectrum-global-color-static-indigo-700:#5151d3;--spectrum-global-color-static-seafoam-200:#26c0c7;--spectrum-global-color-static-seafoam-300:#23b2b8;--spectrum-global-color-static-seafoam-400:#20a3a8;--spectrum-global-color-static-seafoam-500:#1b959a;--spectrum-global-color-static-seafoam-600:#16878c;--spectrum-global-color-static-seafoam-700:#0f797d;--spectrum-global-color-opacity-100:1;--spectrum-global-color-opacity-90:0.9;--spectrum-global-color-opacity-80:0.8;--spectrum-global-color-opacity-60:0.6;--spectrum-global-color-opacity-50:0.5;--spectrum-global-color-opacity-40:0.4;--spectrum-global-color-opacity-30:0.3;--spectrum-global-color-opacity-25:0.25;--spectrum-global-color-opacity-20:0.2;--spectrum-global-color-opacity-15:0.15;--spectrum-global-color-opacity-10:0.1;--spectrum-global-color-opacity-8:0.08;--spectrum-global-color-opacity-7:0.07;--spectrum-global-color-opacity-6:0.06;--spectrum-global-color-opacity-5:0.05;--spectrum-global-color-opacity-4:0.04;--spectrum-global-color-sequential-cerulean:[ \"#E9FFF1\",\"#C8F1E4\",\"#A5E3D7\",\"#82D5CA\",\"#68C5C1\",\"#54B4BA\",\"#3FA2B2\",\"#2991AC\",\"#2280A2\",\"#1F6D98\",\"#1D5C8D\",\"#1A4B83\",\"#1A3979\",\"#1A266F\",\"#191264\",\"#180057\" ];--spectrum-global-color-sequential-forest:[ \"#FFFFDF\",\"#E2F6BA\",\"#C4EB95\",\"#A4E16D\",\"#8DD366\",\"#77C460\",\"#5FB65A\",\"#48A754\",\"#36984F\",\"#2C894D\",\"#237A4A\",\"#196B47\",\"#105C45\",\"#094D41\",\"#033F3E\",\"#00313A\" ];--spectrum-global-color-sequential-rose:[ \"#FFF4DD\",\"#FFDDD7\",\"#FFC5D2\",\"#FEAECB\",\"#FA96C4\",\"#F57EBD\",\"#EF64B5\",\"#E846AD\",\"#D238A1\",\"#BB2E96\",\"#A3248C\",\"#8A1B83\",\"#71167C\",\"#560F74\",\"#370B6E\",\"#000968\" ];--spectrum-global-color-diverging-orange-yellow-seafoam:[ \"#580000\",\"#79260B\",\"#9C4511\",\"#BD651A\",\"#DD8629\",\"#F5AD52\",\"#FED693\",\"#FFFFE0\",\"#BBE4D1\",\"#76C7BE\",\"#3EA8A6\",\"#208288\",\"#076769\",\"#00494B\",\"#002C2D\" ];--spectrum-global-color-diverging-red-yellow-blue:[ \"#4A001E\",\"#751232\",\"#A52747\",\"#C65154\",\"#E47961\",\"#F0A882\",\"#FAD4AC\",\"#FFFFE0\",\"#BCE2CF\",\"#89C0C4\",\"#579EB9\",\"#397AA8\",\"#1C5796\",\"#163771\",\"#10194D\" ];--spectrum-global-color-diverging-red-blue:[ \"#4A001E\",\"#731331\",\"#9F2945\",\"#CC415A\",\"#E06E85\",\"#ED9AB0\",\"#F8C3D9\",\"#FAF0FF\",\"#C6D0F2\",\"#92B2DE\",\"#5D94CB\",\"#2F74B3\",\"#265191\",\"#163670\",\"#0B194C\" ];--spectrum-semantic-negative-color-background:var(--spectrum-global-color-static-red-700);--spectrum-semantic-negative-color-default:var(--spectrum-global-color-red-500);--spectrum-semantic-negative-color-dark:var(--spectrum-global-color-red-600);--spectrum-semantic-negative-color-border:var(--spectrum-global-color-red-400);--spectrum-semantic-negative-color-icon:var(--spectrum-global-color-red-600);--spectrum-semantic-negative-color-status:var(--spectrum-global-color-red-400);--spectrum-semantic-negative-color-text-large:var(--spectrum-global-color-red-500);--spectrum-semantic-negative-color-text-small:var(--spectrum-global-color-red-600);--spectrum-semantic-negative-color-state-down:var(--spectrum-global-color-red-700);--spectrum-semantic-negative-color-state-focus:var(--spectrum-global-color-red-400);--spectrum-semantic-notice-color-background:var(--spectrum-global-color-static-orange-700);--spectrum-semantic-notice-color-default:var(--spectrum-global-color-orange-500);--spectrum-semantic-notice-color-dark:var(--spectrum-global-color-orange-600);--spectrum-semantic-notice-color-border:var(--spectrum-global-color-orange-400);--spectrum-semantic-notice-color-icon:var(--spectrum-global-color-orange-600);--spectrum-semantic-notice-color-status:var(--spectrum-global-color-orange-400);--spectrum-semantic-notice-color-text-large:var(--spectrum-global-color-orange-500);--spectrum-semantic-notice-color-text-small:var(--spectrum-global-color-orange-600);--spectrum-semantic-notice-color-state-down:var(--spectrum-global-color-orange-700);--spectrum-semantic-notice-color-state-focus:var(--spectrum-global-color-orange-400);--spectrum-semantic-positive-color-background:var(--spectrum-global-color-static-green-700);--spectrum-semantic-positive-color-default:var(--spectrum-global-color-green-500);--spectrum-semantic-positive-color-dark:var(--spectrum-global-color-green-600);--spectrum-semantic-positive-color-border:var(--spectrum-global-color-green-400);--spectrum-semantic-positive-color-icon:var(--spectrum-global-color-green-600);--spectrum-semantic-positive-color-status:var(--spectrum-global-color-green-400);--spectrum-semantic-positive-color-text-large:var(--spectrum-global-color-green-500);--spectrum-semantic-positive-color-text-small:var(--spectrum-global-color-green-600);--spectrum-semantic-positive-color-state-down:var(--spectrum-global-color-green-700);--spectrum-semantic-positive-color-state-focus:var(--spectrum-global-color-green-400);--spectrum-semantic-informative-color-background:var(--spectrum-global-color-static-blue-700);--spectrum-semantic-informative-color-default:var(--spectrum-global-color-blue-500);--spectrum-semantic-informative-color-dark:var(--spectrum-global-color-blue-600);--spectrum-semantic-informative-color-border:var(--spectrum-global-color-blue-400);--spectrum-semantic-informative-color-icon:var(--spectrum-global-color-blue-600);--spectrum-semantic-informative-color-status:var(--spectrum-global-color-blue-400);--spectrum-semantic-informative-color-text-large:var(--spectrum-global-color-blue-500);--spectrum-semantic-informative-color-text-small:var(--spectrum-global-color-blue-600);--spectrum-semantic-informative-color-state-down:var(--spectrum-global-color-blue-700);--spectrum-semantic-informative-color-state-focus:var(--spectrum-global-color-blue-400);--spectrum-semantic-cta-color-background-default:var(--spectrum-global-color-static-blue-600);--spectrum-semantic-cta-color-background-hover:var(--spectrum-global-color-static-blue-700);--spectrum-semantic-cta-color-background-down:var(--spectrum-global-color-static-blue-700);--spectrum-semantic-cta-color-background-key-focus:var(--spectrum-global-color-static-blue-600);--spectrum-semantic-background-color-key-focus:var(--spectrum-global-color-static-blue-600);--spectrum-semantic-neutral-color-background:var(--spectrum-global-color-static-gray-700);--spectrum-semantic-presence-color-1:var(--spectrum-global-color-static-red-500);--spectrum-semantic-presence-color-2:var(--spectrum-global-color-static-orange-400);--spectrum-semantic-presence-color-3:var(--spectrum-global-color-static-yellow-400);--spectrum-semantic-presence-color-4:#4bcca2;--spectrum-semantic-presence-color-5:#00c7ff;--spectrum-semantic-presence-color-6:#008cb8;--spectrum-semantic-presence-color-7:#7e4bf3;--spectrum-semantic-presence-color-8:var(--spectrum-global-color-static-fuchsia-600);--spectrum-global-dimension-static-size-0:0px;--spectrum-global-dimension-static-size-10:1px;--spectrum-global-dimension-static-size-25:2px;--spectrum-global-dimension-static-size-50:4px;--spectrum-global-dimension-static-size-40:3px;--spectrum-global-dimension-static-size-65:5px;--spectrum-global-dimension-static-size-100:8px;--spectrum-global-dimension-static-size-115:9px;--spectrum-global-dimension-static-size-125:10px;--spectrum-global-dimension-static-size-150:12px;--spectrum-global-dimension-static-size-175:14px;--spectrum-global-dimension-static-size-200:16px;--spectrum-global-dimension-static-size-225:18px;--spectrum-global-dimension-static-size-250:20px;--spectrum-global-dimension-static-size-300:24px;--spectrum-global-dimension-static-size-400:32px;--spectrum-global-dimension-static-size-450:36px;--spectrum-global-dimension-static-size-500:40px;--spectrum-global-dimension-static-size-550:44px;--spectrum-global-dimension-static-size-600:48px;--spectrum-global-dimension-static-size-700:56px;--spectrum-global-dimension-static-size-800:64px;--spectrum-global-dimension-static-size-900:72px;--spectrum-global-dimension-static-size-1000:80px;--spectrum-global-dimension-static-size-1200:96px;--spectrum-global-dimension-static-size-1700:136px;--spectrum-global-dimension-static-size-2400:192px;--spectrum-global-dimension-static-size-2600:208px;--spectrum-global-dimension-static-size-3400:272px;--spectrum-global-dimension-static-size-3600:288px;--spectrum-global-dimension-static-size-4600:368px;--spectrum-global-dimension-static-size-5000:400px;--spectrum-global-dimension-static-size-6000:480px;--spectrum-global-dimension-static-font-size-50:11px;--spectrum-global-dimension-static-font-size-75:12px;--spectrum-global-dimension-static-font-size-100:14px;--spectrum-global-dimension-static-font-size-150:15px;--spectrum-global-dimension-static-font-size-200:16px;--spectrum-global-dimension-static-font-size-300:18px;--spectrum-global-dimension-static-font-size-400:20px;--spectrum-global-dimension-static-font-size-500:22px;--spectrum-global-dimension-static-font-size-600:25px;--spectrum-global-dimension-static-font-size-700:28px;--spectrum-global-dimension-static-font-size-800:32px;--spectrum-global-dimension-static-font-size-900:36px;--spectrum-global-dimension-static-font-size-1000:40px;--spectrum-global-dimension-static-percent-50:50%;--spectrum-global-dimension-static-percent-100:100%;--spectrum-global-dimension-static-breakpoint-xsmall:304px;--spectrum-global-dimension-static-breakpoint-small:768px;--spectrum-global-dimension-static-breakpoint-medium:1280px;--spectrum-global-dimension-static-breakpoint-large:1768px;--spectrum-global-dimension-static-breakpoint-xlarge:2160px;--spectrum-global-dimension-static-grid-columns:12;--spectrum-global-dimension-static-grid-fluid-width:100%;--spectrum-global-dimension-static-grid-fixed-max-width:1280px;--spectrum-global-font-family-base:adobe-clean,\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Ubuntu,\"Trebuchet MS\",\"Lucida Grande\",sans-serif;--spectrum-global-font-family-serif:adobe-clean-serif,\"Source Serif Pro\",Georgia,serif;--spectrum-global-font-family-code:\"Source Code Pro\",Monaco,monospace;--spectrum-global-font-weight-thin:100;--spectrum-global-font-weight-ultra-light:200;--spectrum-global-font-weight-light:300;--spectrum-global-font-weight-regular:400;--spectrum-global-font-weight-medium:500;--spectrum-global-font-weight-semi-bold:600;--spectrum-global-font-weight-bold:700;--spectrum-global-font-weight-extra-bold:800;--spectrum-global-font-weight-black:900;--spectrum-global-font-style-regular:normal;--spectrum-global-font-style-italic:italic;--spectrum-global-font-letter-spacing-none:0;--spectrum-global-font-letter-spacing-small:0.0125em;--spectrum-global-font-letter-spacing-han:0.05em;--spectrum-global-font-letter-spacing-medium:0.06em;--spectrum-global-font-line-height-large:1.7;--spectrum-global-font-line-height-medium:1.5;--spectrum-global-font-line-height-small:1.3;--spectrum-global-font-multiplier-25:0.25em;--spectrum-global-font-multiplier-75:0.75em;--spectrum-alias-border-size-thin:var(--spectrum-global-dimension-static-size-10);--spectrum-alias-border-size-thick:var(--spectrum-global-dimension-static-size-25);--spectrum-alias-border-size-thicker:var(--spectrum-global-dimension-static-size-50);--spectrum-alias-border-size-thickest:var(--spectrum-global-dimension-static-size-100);--spectrum-alias-border-offset-thin:var(--spectrum-global-dimension-static-size-25);--spectrum-alias-border-offset-thick:var(--spectrum-global-dimension-static-size-50);--spectrum-alias-border-offset-thicker:var(--spectrum-global-dimension-static-size-100);--spectrum-alias-border-offset-thickest:var(--spectrum-global-dimension-static-size-200);--spectrum-alias-grid-baseline:var(--spectrum-global-dimension-static-size-100);--spectrum-alias-grid-gutter-xsmall:var(--spectrum-global-dimension-static-size-200);--spectrum-alias-grid-gutter-small:var(--spectrum-global-dimension-static-size-300);--spectrum-alias-grid-gutter-medium:var(--spectrum-global-dimension-static-size-400);--spectrum-alias-grid-gutter-large:var(--spectrum-global-dimension-static-size-500);--spectrum-alias-grid-gutter-xlarge:var(--spectrum-global-dimension-static-size-600);--spectrum-alias-grid-margin-xsmall:var(--spectrum-global-dimension-static-size-200);--spectrum-alias-grid-margin-small:var(--spectrum-global-dimension-static-size-300);--spectrum-alias-grid-margin-medium:var(--spectrum-global-dimension-static-size-400);--spectrum-alias-grid-margin-large:var(--spectrum-global-dimension-static-size-500);--spectrum-alias-grid-margin-xlarge:var(--spectrum-global-dimension-static-size-600);--spectrum-alias-grid-layout-region-margin-bottom-xsmall:var(--spectrum-global-dimension-static-size-200);--spectrum-alias-grid-layout-region-margin-bottom-small:var(--spectrum-global-dimension-static-size-300);--spectrum-alias-grid-layout-region-margin-bottom-medium:var(--spectrum-global-dimension-static-size-400);--spectrum-alias-grid-layout-region-margin-bottom-large:var(--spectrum-global-dimension-static-size-500);--spectrum-alias-grid-layout-region-margin-bottom-xlarge:var(--spectrum-global-dimension-static-size-600);--spectrum-alias-radial-reaction-size-default:var(--spectrum-global-dimension-static-size-550);--spectrum-alias-font-family-ar:myriad-arabic,adobe-clean,\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Ubuntu,\"Trebuchet MS\",\"Lucida Grande\",sans-serif;--spectrum-alias-font-family-he:myriad-hebrew,adobe-clean,\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Ubuntu,\"Trebuchet MS\",\"Lucida Grande\",sans-serif;--spectrum-alias-font-family-zh:adobe-clean-han-traditional,source-han-traditional,\"MingLiu\",\"Heiti TC Light\",\"sans-serif\";--spectrum-alias-font-family-zhhans:adobe-clean-han-simplified-c,source-han-simplified-c,\"SimSun\",\"Heiti SC Light\",\"sans-serif\";--spectrum-alias-font-family-ko:adobe-clean-han-korean,source-han-korean,\"Malgun Gothic\",\"Apple Gothic\",\"sans-serif\";--spectrum-alias-font-family-ja:adobe-clean-han-japanese,source-han-japanese,\"Yu Gothic\",\"\\\\30E1 \\\\30A4 \\\\30EA \\\\30AA\",\"\\\\30D2 \\\\30E9 \\\\30AE \\\\30CE \\\\89D2 \\\\30B4  Pro W3\",\"Hiragino Kaku Gothic Pro W3\",\"Osaka\",\"\\\\FF2D \\\\FF33 \\\\FF30 \\\\30B4 \\\\30B7 \\\\30C3 \\\\30AF\",\"MS PGothic\",\"sans-serif\";--spectrum-alias-font-family-condensed:adobe-clean-han-traditional,source-han-traditional,\"MingLiu\",\"Heiti TC Light\",adobe-clean,\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Ubuntu,\"Trebuchet MS\",\"Lucida Grande\",sans-serif;--spectrum-alias-line-height-body:var(--spectrum-global-font-line-height-medium);--spectrum-alias-line-height-title:var(--spectrum-global-font-line-height-small);--spectrum-alias-body-han-text-line-height:var(--spectrum-global-font-line-height-large);--spectrum-alias-body-text-font-family:var(--spectrum-global-font-family-base);--spectrum-alias-body-text-line-height:var(--spectrum-global-font-line-height-medium);--spectrum-alias-body-text-font-weight:var(--spectrum-global-font-weight-regular);--spectrum-alias-body-text-font-weight-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-button-text-line-height:var(--spectrum-global-font-line-height-small);--spectrum-alias-heading-han-text-line-height:var(--spectrum-global-font-line-height-medium);--spectrum-alias-heading-text-line-height:var(--spectrum-global-font-line-height-small);--spectrum-alias-heading-text-font-weight-regular:var(--spectrum-global-font-weight-bold);--spectrum-alias-heading-text-font-weight-regular-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-heading-text-font-weight-quiet:var(--spectrum-global-font-weight-light);--spectrum-alias-heading-text-font-weight-quiet-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-heading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-heading-text-font-weight-strong-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-subheading-text-font-weight:var(--spectrum-global-font-weight-bold);--spectrum-alias-subheading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-detail-text-font-weight:var(--spectrum-global-font-weight-bold);--spectrum-alias-detail-text-font-weight-light:var(--spectrum-global-font-weight-regular);--spectrum-alias-detail-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-serif-text-font-family:var(--spectrum-global-font-family-serif);--spectrum-alias-article-text-font-family:var(--spectrum-global-font-family-serif);--spectrum-alias-article-body-text-font-weight:var(--spectrum-global-font-weight-regular);--spectrum-alias-article-body-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-article-heading-text-font-weight:var(--spectrum-global-font-weight-bold);--spectrum-alias-article-heading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-article-heading-text-font-weight-quiet:var(--spectrum-global-font-weight-regular);--spectrum-alias-article-heading-text-font-weight-quiet-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-article-subheading-text-font-weight:var(--spectrum-global-font-weight-bold);--spectrum-alias-article-subheading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-article-detail-text-font-weight:var(--spectrum-global-font-weight-regular);--spectrum-alias-article-detail-text-font-weight-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-code-text-font-family:var(--spectrum-global-font-family-code);--spectrum-alias-han-heading-text-font-weight-regular:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-heading-text-font-weight-regular-emphasis:var(--spectrum-global-font-weight-extra-bold);--spectrum-alias-han-heading-text-font-weight-regular-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-quiet:var(--spectrum-global-font-weight-light);--spectrum-alias-han-heading-text-font-weight-quiet-emphasis:var(--spectrum-global-font-weight-regular);--spectrum-alias-han-heading-text-font-weight-quiet-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-heading-text-font-weight-light:var(--spectrum-global-font-weight-light);--spectrum-alias-han-heading-text-font-weight-light-emphasis:var(--spectrum-global-font-weight-regular);--spectrum-alias-han-heading-text-font-weight-light-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-heading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-strong-emphasis:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-strong-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-heavy:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-heavy-emphasis:var(--spectrum-global-font-weight-black);--spectrum-alias-han-heading-text-font-weight-heavy-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-body-text-font-weight-regular:var(--spectrum-global-font-weight-regular);--spectrum-alias-han-body-text-font-weight-emphasis:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-body-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-subheading-text-font-weight-regular:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-subheading-text-font-weight-emphasis:var(--spectrum-global-font-weight-extra-bold);--spectrum-alias-han-subheading-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-han-detail-text-font-weight:var(--spectrum-global-font-weight-regular);--spectrum-alias-han-detail-text-font-weight-emphasis:var(--spectrum-global-font-weight-bold);--spectrum-alias-han-detail-text-font-weight-strong:var(--spectrum-global-font-weight-black);--spectrum-alias-code-text-font-weight-regular:var(--spectrum-global-font-weight-regular);--spectrum-alias-code-text-font-weight-strong:var(--spectrum-global-font-weight-bold);--spectrum-alias-code-text-line-height:var(--spectrum-global-font-line-height-medium);--spectrum-alias-heading-margin-bottom:var(--spectrum-global-font-multiplier-25);--spectrum-alias-body-margin-bottom:var(--spectrum-global-font-multiplier-75);--spectrum-alias-loupe-entry-animation-duration:var(--spectrum-global-animation-duration-300);--spectrum-alias-loupe-exit-animation-duration:var(--spectrum-global-animation-duration-300);--spectrum-alias-dropshadow-blur:var(--spectrum-global-dimension-size-50);--spectrum-alias-dropshadow-offset-y:var(--spectrum-global-dimension-size-10);--spectrum-alias-font-size-default:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-line-height-small:var(--spectrum-global-dimension-size-200);--spectrum-alias-line-height-medium:var(--spectrum-global-dimension-size-250);--spectrum-alias-line-height-large:var(--spectrum-global-dimension-size-300);--spectrum-alias-line-height-xlarge:var(--spectrum-global-dimension-size-400);--spectrum-alias-line-height-xxlarge:var(--spectrum-global-dimension-size-600);--spectrum-alias-layout-label-gap-size:var(--spectrum-global-dimension-size-100);--spectrum-alias-pill-button-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-pill-button-text-baseline:var(--spectrum-global-dimension-static-size-150);--spectrum-alias-border-radius-xsmall:var(--spectrum-global-dimension-size-10);--spectrum-alias-border-radius-small:var(--spectrum-global-dimension-size-25);--spectrum-alias-border-radius-regular:var(--spectrum-global-dimension-size-50);--spectrum-alias-border-radius-medium:var(--spectrum-global-dimension-size-100);--spectrum-alias-border-radius-large:var(--spectrum-global-dimension-size-200);--spectrum-alias-single-line-height:var(--spectrum-global-dimension-size-400);--spectrum-alias-single-line-width:var(--spectrum-global-dimension-size-2400);--spectrum-alias-workflow-icon-size:var(--spectrum-global-dimension-size-225);--spectrum-alias-heading-display1-text-size:var(--spectrum-global-dimension-font-size-1300);--spectrum-alias-heading-xxxl-text-size:var(--spectrum-global-dimension-font-size-1300);--spectrum-alias-heading-han-display1-text-size:var(--spectrum-global-dimension-font-size-1300);--spectrum-alias-heading-han-xxxl-text-size:var(--spectrum-global-dimension-font-size-1300);--spectrum-alias-heading-han-display1-margin-top:var(--spectrum-global-dimension-font-size-1200);--spectrum-alias-heading-han-xxxl-margin-top:var(--spectrum-global-dimension-font-size-1200);--spectrum-alias-heading-display1-margin-top:var(--spectrum-global-dimension-font-size-1200);--spectrum-alias-heading-xxxl-margin-top:var(--spectrum-global-dimension-font-size-1200);--spectrum-alias-heading-display2-text-size:var(--spectrum-global-dimension-font-size-1100);--spectrum-alias-heading-xxl-text-size:var(--spectrum-global-dimension-font-size-1100);--spectrum-alias-heading-display2-margin-top:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading-xxl-margin-top:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading-han-display2-text-size:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading-han-xxl-text-size:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading-han-display2-margin-top:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading-han-xxl-margin-top:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading1-text-size:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading-xl-text-size:var(--spectrum-global-dimension-font-size-900);--spectrum-alias-heading1-margin-top:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading-xl-margin-top:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading1-han-text-size:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading-han-xl-text-size:var(--spectrum-global-dimension-font-size-800);--spectrum-alias-heading1-han-margin-top:var(--spectrum-global-dimension-font-size-700);--spectrum-alias-heading-han-xl-margin-top:var(--spectrum-global-dimension-font-size-700);--spectrum-alias-heading2-text-size:var(--spectrum-global-dimension-font-size-700);--spectrum-alias-heading-l-text-size:var(--spectrum-global-dimension-font-size-700);--spectrum-alias-heading2-margin-top:var(--spectrum-global-dimension-font-size-600);--spectrum-alias-heading-l-margin-top:var(--spectrum-global-dimension-font-size-600);--spectrum-alias-heading2-han-text-size:var(--spectrum-global-dimension-font-size-600);--spectrum-alias-heading-han-l-text-size:var(--spectrum-global-dimension-font-size-600);--spectrum-alias-heading2-han-margin-top:var(--spectrum-global-dimension-font-size-500);--spectrum-alias-heading-han-l-margin-top:var(--spectrum-global-dimension-font-size-500);--spectrum-alias-heading3-text-size:var(--spectrum-global-dimension-font-size-500);--spectrum-alias-heading-m-text-size:var(--spectrum-global-dimension-font-size-500);--spectrum-alias-heading3-margin-top:var(--spectrum-global-dimension-font-size-400);--spectrum-alias-heading-m-margin-top:var(--spectrum-global-dimension-font-size-400);--spectrum-alias-heading3-han-text-size:var(--spectrum-global-dimension-font-size-400);--spectrum-alias-heading-han-m-text-size:var(--spectrum-global-dimension-font-size-400);--spectrum-alias-heading3-han-margin-top:var(--spectrum-global-dimension-font-size-300);--spectrum-alias-heading-han-m-margin-top:var(--spectrum-global-dimension-font-size-300);--spectrum-alias-heading4-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-alias-heading-s-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-alias-heading4-margin-top:var(--spectrum-global-dimension-font-size-200);--spectrum-alias-heading-s-margin-top:var(--spectrum-global-dimension-font-size-200);--spectrum-alias-heading5-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-alias-heading-xs-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-alias-heading5-margin-top:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-heading-xs-margin-top:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-heading6-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-heading-xxs-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-alias-heading6-margin-top:var(--spectrum-global-dimension-font-size-75);--spectrum-alias-heading-xxs-margin-top:var(--spectrum-global-dimension-font-size-75);--spectrum-alias-background-color-default:var(--spectrum-global-color-gray-100);--spectrum-alias-background-color-transparent:transparent;--spectrum-alias-background-color-label-gray:#707070;--spectrum-alias-background-color-quickactions-overlay:rgba(0,0,0,0.2);--spectrum-alias-placeholder-text-color:var(--spectrum-global-color-gray-600);--spectrum-alias-placeholder-text-color-hover:var(--spectrum-global-color-gray-900);--spectrum-alias-placeholder-text-color-down:var(--spectrum-global-color-gray-900);--spectrum-alias-placeholder-text-color-selected:var(--spectrum-global-color-gray-800);--spectrum-alias-label-text-color:var(--spectrum-global-color-gray-700);--spectrum-alias-text-color:var(--spectrum-global-color-gray-800);--spectrum-alias-text-color-hover:var(--spectrum-global-color-gray-900);--spectrum-alias-text-color-down:var(--spectrum-global-color-gray-900);--spectrum-alias-text-color-key-focus:var(--spectrum-global-color-blue-600);--spectrum-alias-text-color-mouse-focus:var(--spectrum-global-color-blue-600);--spectrum-alias-text-color-disabled:var(--spectrum-global-color-gray-500);--spectrum-alias-text-color-invalid:var(--spectrum-global-color-red-500);--spectrum-alias-text-color-selected:var(--spectrum-global-color-blue-600);--spectrum-alias-text-color-selected-neutral:var(--spectrum-global-color-gray-900);--spectrum-alias-title-text-color:var(--spectrum-global-color-gray-900);--spectrum-alias-heading-text-color:var(--spectrum-global-color-gray-900);--spectrum-alias-border-color:var(--spectrum-global-color-gray-300);--spectrum-alias-border-color-hover:var(--spectrum-global-color-gray-400);--spectrum-alias-border-color-focus:var(--spectrum-global-color-blue-400);--spectrum-alias-border-color-down:var(--spectrum-global-color-blue-500);--spectrum-alias-border-color-extralight:var(--spectrum-global-color-gray-100);--spectrum-alias-border-color-light:var(--spectrum-global-color-gray-200);--spectrum-alias-border-color-mid:var(--spectrum-global-color-gray-300);--spectrum-alias-border-color-dark:var(--spectrum-global-color-gray-400);--spectrum-alias-border-color-transparent:transparent;--spectrum-alias-border-color-translucent-dark:rgba(0,0,0,0.05);--spectrum-alias-border-color-translucent-darker:rgba(0,0,0,0.1);--spectrum-alias-focus-color:var(--spectrum-global-color-blue-400);--spectrum-alias-track-color-default:var(--spectrum-global-color-gray-300);--spectrum-alias-track-color-disabled:var(--spectrum-global-color-gray-300);--spectrum-alias-track-color-over-background:hsla(0,0%,100%,0.2);--spectrum-alias-icon-color:var(--spectrum-global-color-gray-700);--spectrum-alias-icon-color-over-background:var(--spectrum-global-color-static-white);--spectrum-alias-icon-color-hover:var(--spectrum-global-color-gray-900);--spectrum-alias-icon-color-down:var(--spectrum-global-color-gray-900);--spectrum-alias-icon-color-focus:var(--spectrum-global-color-gray-900);--spectrum-alias-icon-color-disabled:var(--spectrum-global-color-gray-400);--spectrum-alias-icon-color-selected-neutral:var(--spectrum-global-color-gray-900);--spectrum-alias-icon-color-selected:var(--spectrum-global-color-blue-500);--spectrum-alias-icon-color-selected-hover:var(--spectrum-global-color-blue-600);--spectrum-alias-icon-color-selected-down:var(--spectrum-global-color-blue-700);--spectrum-alias-icon-color-selected-focus:var(--spectrum-global-color-blue-600);--spectrum-alias-icon-color-error:var(--spectrum-global-color-red-400);--spectrum-alias-toolbar-background-color:var(--spectrum-global-color-gray-100);--spectrum-alias-categorical-color-1:var(--spectrum-global-color-static-seafoam-200);--spectrum-alias-categorical-color-2:var(--spectrum-global-color-static-indigo-700);--spectrum-alias-categorical-color-3:var(--spectrum-global-color-static-orange-500);--spectrum-alias-categorical-color-4:var(--spectrum-global-color-static-magenta-500);--spectrum-alias-categorical-color-5:var(--spectrum-global-color-static-indigo-200);--spectrum-alias-categorical-color-6:var(--spectrum-global-color-static-celery-200);--spectrum-alias-categorical-color-7:var(--spectrum-global-color-static-blue-500);--spectrum-alias-categorical-color-8:var(--spectrum-global-color-static-purple-800);--spectrum-alias-categorical-color-9:var(--spectrum-global-color-static-yellow-500);--spectrum-alias-categorical-color-10:var(--spectrum-global-color-static-orange-700);--spectrum-alias-categorical-color-11:var(--spectrum-global-color-static-green-600);--spectrum-alias-categorical-color-12:var(--spectrum-global-color-static-chartreuse-300);--spectrum-alias-categorical-color-13:var(--spectrum-global-color-static-blue-200);--spectrum-alias-categorical-color-14:var(--spectrum-global-color-static-fuchsia-500);--spectrum-alias-categorical-color-15:var(--spectrum-global-color-static-magenta-200);--spectrum-alias-categorical-color-16:var(--spectrum-global-color-static-yellow-200);--spectrum-font-fallbacks-sans:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif;--spectrum-font-family-base:\"adobe-clean-ux\",\"adobe-clean\",\"Source Sans Pro\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-han:\"adobe-clean-han-japanese\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-ar:\"adobe-arabic\",\"myriad-arabic\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-he:\"adobe-hebrew\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-zhhans:\"adobe-clean-han-simplified-c\",\"SimSun\",\"Heiti SC Light\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-zh:var(--spectrum-font-family-zhhans);--spectrum-font-family-zhhant:\"adobe-clean-han-traditional\",\"Microsoft JhengHei UI\",\"Microsoft JhengHei\",\"Heiti TC Light\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-ko:\"adobe-clean-han-korean\",\"Malgun Gothic\",\"Apple Gothic\",var(--spectrum-font-fallbacks-sans);--spectrum-font-family-ja:\"adobe-clean-han-japanese\",\"Yu Gothic\",\"\\\\30E1 \\\\30A4 \\\\30EA \\\\30AA\",\"\\\\30D2 \\\\30E9 \\\\30AE \\\\30CE \\\\89D2 \\\\30B4  Pro W3\",\"Hiragino Kaku Gothic Pro W3\",\"Osaka\",\"\\\\FF2D \\\\FF33 \\\\FF30 \\\\30B4 \\\\30B7 \\\\30C3 \\\\30AF\",\"MS PGothic\",var(--spectrum-font-fallbacks-sans);--spectrum-text-size:var(--spectrum-alias-font-size-default);--spectrum-text-body-line-height:var(--spectrum-alias-line-height-medium);--spectrum-text-size-text-label:var(--spectrum-label-text-size);--spectrum-line-height-text-label:var(--spectrum-label-text-line-height);font-family:var(--spectrum-font-family-base);font-size:var(--spectrum-text-size)}:host:lang(ar),:root:lang(ar){font-family:var(--spectrum-font-family-ar)}:host:lang(he),:root:lang(he){font-family:var(--spectrum-font-family-he)}:host:lang(zh-Hans),:root:lang(zh-Hans){font-family:var(--spectrum-font-family-zhhans)}:host:lang(zh-Hant),:root:lang(zh-Hant){font-family:var(--spectrum-font-family-zhhant)}:host:lang(zh),:root:lang(zh){font-family:var(--spectrum-font-family-zh)}:host:lang(ko),:root:lang(ko){font-family:var(--spectrum-font-family-ko)}:host:lang(ja),:root:lang(ja){font-family:var(--spectrum-font-family-ja)}:host{display:block}#scale,#theme{width:100%;height:100%}\n`;\nexport default styles;\n//# sourceMappingURL=theme.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport coreStyles from './theme.css';\nimport { supportsAdoptingStyleSheets } from 'lit-element';\nexport const DefaultColor = 'light';\nexport const DefaultScale = 'medium';\nexport class Theme extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        if (this.shadowRoot) {\n            const node = document.importNode(Theme.template.content, true);\n            this.shadowRoot.appendChild(node);\n        }\n        this.adoptStyles();\n        this.addEventListener('sp-query-theme', this\n            .onQueryTheme);\n    }\n    static get observedAttributes() {\n        return ['color', 'scale'];\n    }\n    get color() {\n        const color = this.getAttribute('color');\n        if (!color)\n            return DefaultColor;\n        const colorFragment = Theme.themeFragments.get(color);\n        if (colorFragment && colorFragment.kind === 'color') {\n            return color;\n        }\n        return DefaultColor;\n    }\n    set color(newValue) {\n        this.setAttribute('color', newValue);\n    }\n    get scale() {\n        const scale = this.getAttribute('scale');\n        if (!scale)\n            return DefaultScale;\n        const scaleFragment = Theme.themeFragments.get(scale);\n        if (scaleFragment && scaleFragment.kind === 'scale') {\n            return scale;\n        }\n        return DefaultScale;\n    }\n    set scale(newValue) {\n        this.setAttribute('scale', newValue);\n    }\n    get styles() {\n        return [\n            coreStyles,\n            Theme.themeFragment(this.color).styles,\n            Theme.themeFragment(this.scale).styles,\n        ];\n    }\n    static get template() {\n        if (!this.templateElement) {\n            this.templateElement = document.createElement('template');\n            this.templateElement.innerHTML = '<slot></slot>';\n        }\n        return this.templateElement;\n    }\n    onQueryTheme(event) {\n        if (event.defaultPrevented) {\n            return;\n        }\n        event.preventDefault();\n        const { detail: theme } = event;\n        theme.color = this.color;\n        theme.scale = this.scale;\n    }\n    connectedCallback() {\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    adoptStyles() {\n        const styles = this.styles; // No test coverage on Edge\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        /* istanbul ignore if */ if (window.ShadyCSS !== undefined &&\n            !window.ShadyCSS.nativeShadow &&\n            window.ShadyCSS.ScopingShim) {\n            // For browsers using the shim, there seems to be one set of\n            // processed styles per template, so it is hard to nest styles. So,\n            // for those, we load in all style fragments and then switch using a\n            // host selector (e.g. :host([color='dark']))\n            const fragmentCSS = [];\n            for (const [name, { kind, styles }] of Theme.themeFragments) {\n                let cssText = styles.cssText;\n                if (!Theme.defaultFragments.has(name)) {\n                    cssText = cssText.replace(':host', `:host([${kind}='${name}'])`);\n                }\n                fragmentCSS.push(cssText);\n            }\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(fragmentCSS, this.localName);\n            window.ShadyCSS.prepareTemplate(Theme.template, this.localName);\n        }\n        else if (supportsAdoptingStyleSheets && this.shadowRoot) {\n            const styleSheets = [];\n            for (const style of styles) {\n                if (style.styleSheet) {\n                    styleSheets.push(style.styleSheet);\n                }\n            }\n            this.shadowRoot.adoptedStyleSheets = styleSheets;\n        }\n        else {\n            if (this.shadowRoot) {\n                const styleNodes = this.shadowRoot.querySelectorAll('style');\n                if (styleNodes) {\n                    styleNodes.forEach((element) => element.remove());\n                }\n                styles.forEach((s) => {\n                    const style = document.createElement('style');\n                    style.textContent = s.cssText;\n                    if (this.shadowRoot) {\n                        this.shadowRoot.appendChild(style);\n                    }\n                });\n            }\n        }\n    }\n    attributeChangedCallback() {\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.styleElement(this);\n        }\n        else {\n            this.adoptStyles();\n        }\n    }\n    static registerThemeFragment(name, kind, styles) {\n        this.themeFragments.set(name, { kind, styles });\n    }\n    static themeFragment(name) {\n        const fragment = this.themeFragments.get(name);\n        if (!fragment) {\n            throw new Error(`Unknown theme fragment '${name}'`);\n        }\n        return fragment;\n    }\n}\nTheme.themeFragments = new Map();\nTheme.defaultFragments = new Set([\n    'core',\n    'light',\n    'medium',\n]);\nTheme.registerThemeFragment('core', 'core', coreStyles);\n//# sourceMappingURL=theme.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-color-celery-400:#44b556;--spectrum-global-color-celery-500:#4bc35f;--spectrum-global-color-celery-600:#51d267;--spectrum-global-color-celery-700:#58e06f;--spectrum-global-color-chartreuse-400:#85d044;--spectrum-global-color-chartreuse-500:#8ede49;--spectrum-global-color-chartreuse-600:#9bec54;--spectrum-global-color-chartreuse-700:#a3f858;--spectrum-global-color-yellow-400:#dfbf00;--spectrum-global-color-yellow-500:#edcc00;--spectrum-global-color-yellow-600:#fad900;--spectrum-global-color-yellow-700:#ffe22e;--spectrum-global-color-magenta-400:#d83790;--spectrum-global-color-magenta-500:#e2499d;--spectrum-global-color-magenta-600:#ec5aaa;--spectrum-global-color-magenta-700:#f56bb7;--spectrum-global-color-fuchsia-400:#c038cc;--spectrum-global-color-fuchsia-500:#cf3edc;--spectrum-global-color-fuchsia-600:#d951e5;--spectrum-global-color-fuchsia-700:#e366ef;--spectrum-global-color-purple-400:#9256d9;--spectrum-global-color-purple-500:#9d64e1;--spectrum-global-color-purple-600:#a873e9;--spectrum-global-color-purple-700:#b483f0;--spectrum-global-color-indigo-400:#6767ec;--spectrum-global-color-indigo-500:#7575f1;--spectrum-global-color-indigo-600:#8282f6;--spectrum-global-color-indigo-700:#9090fa;--spectrum-global-color-seafoam-400:#1b959a;--spectrum-global-color-seafoam-500:#20a3a8;--spectrum-global-color-seafoam-600:#23b2b8;--spectrum-global-color-seafoam-700:#26c0c7;--spectrum-global-color-red-400:#e34850;--spectrum-global-color-red-500:#ec5b62;--spectrum-global-color-red-600:#f76d74;--spectrum-global-color-red-700:#ff7b82;--spectrum-global-color-orange-400:#e68619;--spectrum-global-color-orange-500:#f29423;--spectrum-global-color-orange-600:#f9a43f;--spectrum-global-color-orange-700:#ffb55b;--spectrum-global-color-green-400:#2d9d78;--spectrum-global-color-green-500:#33ab84;--spectrum-global-color-green-600:#39b990;--spectrum-global-color-green-700:#3fc89c;--spectrum-global-color-blue-400:#2680eb;--spectrum-global-color-blue-500:#378ef0;--spectrum-global-color-blue-600:#4b9cf5;--spectrum-global-color-blue-700:#5aa9fa;--spectrum-global-color-gray-50:#252525;--spectrum-global-color-gray-75:#2f2f2f;--spectrum-global-color-gray-100:#323232;--spectrum-global-color-gray-200:#3e3e3e;--spectrum-global-color-gray-300:#4a4a4a;--spectrum-global-color-gray-400:#5a5a5a;--spectrum-global-color-gray-500:#6e6e6e;--spectrum-global-color-gray-600:#909090;--spectrum-global-color-gray-700:#b9b9b9;--spectrum-global-color-gray-800:#e3e3e3;--spectrum-global-color-gray-900:#fff;--spectrum-alias-background-color-modal-overlay:rgba(0,0,0,0.5);--spectrum-alias-dropshadow-color:rgba(0,0,0,0.5);--spectrum-alias-background-color-hover-overlay:hsla(0,0%,100%,0.06);--spectrum-alias-highlight-hover:hsla(0,0%,100%,0.07);--spectrum-alias-highlight-active:hsla(0,0%,100%,0.1);--spectrum-alias-highlight-selected:rgba(55,142,240,0.15);--spectrum-alias-highlight-selected-hover:rgba(55,142,240,0.25);--spectrum-alias-text-highlight-color:rgba(55,142,240,0.25);--spectrum-alias-background-color-quickactions:rgba(50,50,50,0.9);--spectrum-alias-radial-reaction-color-default:hsla(0,0%,89%,0.6);--spectrum-alias-pasteboard-background-color:var(--spectrum-global-color-gray-50);--spectrum-alias-appframe-border-color:var(--spectrum-global-color-gray-50);--spectrum-alias-appframe-separator-color:var(--spectrum-global-color-gray-50);--spectrum-colorarea-border-color:hsla(0,0%,100%,0.1);--spectrum-colorarea-border-color-hover:hsla(0,0%,100%,0.1);--spectrum-colorarea-border-color-down:hsla(0,0%,100%,0.1);--spectrum-colorarea-border-color-key-focus:hsla(0,0%,100%,0.1);--spectrum-colorslider-border-color:hsla(0,0%,100%,0.1);--spectrum-colorslider-border-color-hover:hsla(0,0%,100%,0.1);--spectrum-colorslider-border-color-down:hsla(0,0%,100%,0.1);--spectrum-colorslider-border-color-key-focus:hsla(0,0%,100%,0.1);--spectrum-colorslider-vertical-border-color:hsla(0,0%,100%,0.1);--spectrum-colorslider-vertical-border-color-hover:hsla(0,0%,100%,0.1);--spectrum-colorslider-vertical-border-color-down:hsla(0,0%,100%,0.1);--spectrum-colorslider-vertical-border-color-key-focus:hsla(0,0%,100%,0.1);--spectrum-colorwheel-border-color:hsla(0,0%,100%,0.1);--spectrum-colorwheel-border-color-hover:hsla(0,0%,100%,0.1);--spectrum-colorwheel-border-color-down:hsla(0,0%,100%,0.1);--spectrum-colorwheel-border-color-key-focus:hsla(0,0%,100%,0.1);--spectrum-miller-column-item-background-color-selected:rgba(55,142,240,0.1);--spectrum-miller-column-item-background-color-selected-hover:rgba(55,142,240,0.2);--spectrum-tabs-compact-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-compact-vertical-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-compact-vertical-emphasized-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-well-background-color:hsla(0,0%,89%,0.02);--spectrum-well-border-color:hsla(0,0%,100%,0.05)}\n`;\nexport default styles;\n//# sourceMappingURL=theme-dark.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport darkStyles from './theme-dark.css.js';\nimport { Theme } from './theme';\nTheme.registerThemeFragment('dark', 'color', darkStyles);\n//# sourceMappingURL=theme-dark.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-color-celery-400:#44b556;--spectrum-global-color-celery-500:#3da74e;--spectrum-global-color-celery-600:#379947;--spectrum-global-color-celery-700:#318b40;--spectrum-global-color-chartreuse-400:#85d044;--spectrum-global-color-chartreuse-500:#7cc33f;--spectrum-global-color-chartreuse-600:#73b53a;--spectrum-global-color-chartreuse-700:#6aa834;--spectrum-global-color-yellow-400:#dfbf00;--spectrum-global-color-yellow-500:#d2b200;--spectrum-global-color-yellow-600:#c4a600;--spectrum-global-color-yellow-700:#b79900;--spectrum-global-color-magenta-400:#d83790;--spectrum-global-color-magenta-500:#ce2783;--spectrum-global-color-magenta-600:#bc1c74;--spectrum-global-color-magenta-700:#ae0e66;--spectrum-global-color-fuchsia-400:#c038cc;--spectrum-global-color-fuchsia-500:#b130bd;--spectrum-global-color-fuchsia-600:#a228ad;--spectrum-global-color-fuchsia-700:#93219e;--spectrum-global-color-purple-400:#9256d9;--spectrum-global-color-purple-500:#864ccc;--spectrum-global-color-purple-600:#7a42bf;--spectrum-global-color-purple-700:#6f38b1;--spectrum-global-color-indigo-400:#6767ec;--spectrum-global-color-indigo-500:#5c5ce0;--spectrum-global-color-indigo-600:#5151d3;--spectrum-global-color-indigo-700:#4646c6;--spectrum-global-color-seafoam-400:#1b959a;--spectrum-global-color-seafoam-500:#16878c;--spectrum-global-color-seafoam-600:#0f797d;--spectrum-global-color-seafoam-700:#096c6f;--spectrum-global-color-red-400:#e34850;--spectrum-global-color-red-500:#d7373f;--spectrum-global-color-red-600:#c9252d;--spectrum-global-color-red-700:#bb121a;--spectrum-global-color-orange-400:#e68619;--spectrum-global-color-orange-500:#da7b11;--spectrum-global-color-orange-600:#cb6f10;--spectrum-global-color-orange-700:#bd640d;--spectrum-global-color-green-400:#2d9d78;--spectrum-global-color-green-500:#268e6c;--spectrum-global-color-green-600:#12805c;--spectrum-global-color-green-700:#107154;--spectrum-global-color-blue-400:#2680eb;--spectrum-global-color-blue-500:#1473e6;--spectrum-global-color-blue-600:#0d66d0;--spectrum-global-color-blue-700:#095aba;--spectrum-global-color-gray-50:#fff;--spectrum-global-color-gray-75:#fafafa;--spectrum-global-color-gray-100:#f5f5f5;--spectrum-global-color-gray-200:#eaeaea;--spectrum-global-color-gray-300:#e1e1e1;--spectrum-global-color-gray-400:#cacaca;--spectrum-global-color-gray-500:#b3b3b3;--spectrum-global-color-gray-600:#8e8e8e;--spectrum-global-color-gray-700:#6e6e6e;--spectrum-global-color-gray-800:#4b4b4b;--spectrum-global-color-gray-900:#2c2c2c;--spectrum-alias-background-color-modal-overlay:rgba(0,0,0,0.4);--spectrum-alias-dropshadow-color:rgba(0,0,0,0.15);--spectrum-alias-background-color-hover-overlay:rgba(44,44,44,0.04);--spectrum-alias-highlight-hover:rgba(44,44,44,0.06);--spectrum-alias-highlight-active:rgba(44,44,44,0.1);--spectrum-alias-highlight-selected:rgba(20,115,230,0.1);--spectrum-alias-highlight-selected-hover:rgba(20,115,230,0.2);--spectrum-alias-text-highlight-color:rgba(20,115,230,0.2);--spectrum-alias-background-color-quickactions:hsla(0,0%,96.1%,0.9);--spectrum-alias-radial-reaction-color-default:rgba(75,75,75,0.6);--spectrum-alias-pasteboard-background-color:var(--spectrum-global-color-gray-300);--spectrum-alias-appframe-border-color:var(--spectrum-global-color-gray-300);--spectrum-alias-appframe-separator-color:var(--spectrum-global-color-gray-300);--spectrum-colorarea-border-color:rgba(44,44,44,0.1);--spectrum-colorarea-border-color-hover:rgba(44,44,44,0.1);--spectrum-colorarea-border-color-down:rgba(44,44,44,0.1);--spectrum-colorarea-border-color-key-focus:rgba(44,44,44,0.1);--spectrum-colorslider-border-color:rgba(44,44,44,0.1);--spectrum-colorslider-border-color-hover:rgba(44,44,44,0.1);--spectrum-colorslider-border-color-down:rgba(44,44,44,0.1);--spectrum-colorslider-border-color-key-focus:rgba(44,44,44,0.1);--spectrum-colorslider-vertical-border-color:rgba(44,44,44,0.1);--spectrum-colorslider-vertical-border-color-hover:rgba(44,44,44,0.1);--spectrum-colorslider-vertical-border-color-down:rgba(44,44,44,0.1);--spectrum-colorslider-vertical-border-color-key-focus:rgba(44,44,44,0.1);--spectrum-colorwheel-border-color:rgba(44,44,44,0.1);--spectrum-colorwheel-border-color-hover:rgba(44,44,44,0.1);--spectrum-colorwheel-border-color-down:rgba(44,44,44,0.1);--spectrum-colorwheel-border-color-key-focus:rgba(44,44,44,0.1);--spectrum-miller-column-item-background-color-selected:rgba(20,115,230,0.1);--spectrum-miller-column-item-background-color-selected-hover:rgba(20,115,230,0.2);--spectrum-tabs-compact-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-compact-vertical-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-compact-vertical-emphasized-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-well-background-color:rgba(75,75,75,0.02);--spectrum-well-border-color:rgba(44,44,44,0.05)}\n`;\nexport default styles;\n//# sourceMappingURL=theme-light.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport lightStyles from './theme-light.css.js';\nimport { Theme } from './theme';\nTheme.registerThemeFragment('light', 'color', lightStyles);\n//# sourceMappingURL=theme-light.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-color-celery-400:#4bc35f;--spectrum-global-color-celery-500:#44b556;--spectrum-global-color-celery-600:#3da74e;--spectrum-global-color-celery-700:#379947;--spectrum-global-color-chartreuse-400:#8ede49;--spectrum-global-color-chartreuse-500:#85d044;--spectrum-global-color-chartreuse-600:#7cc33f;--spectrum-global-color-chartreuse-700:#73b53a;--spectrum-global-color-yellow-400:#edcc00;--spectrum-global-color-yellow-500:#dfbf00;--spectrum-global-color-yellow-600:#d2b200;--spectrum-global-color-yellow-700:#c4a600;--spectrum-global-color-magenta-400:#e2499d;--spectrum-global-color-magenta-500:#d83790;--spectrum-global-color-magenta-600:#ca2982;--spectrum-global-color-magenta-700:#bc1c74;--spectrum-global-color-fuchsia-400:#cf3edc;--spectrum-global-color-fuchsia-500:#c038cc;--spectrum-global-color-fuchsia-600:#b130bd;--spectrum-global-color-fuchsia-700:#a228ad;--spectrum-global-color-purple-400:#9d64e1;--spectrum-global-color-purple-500:#9256d9;--spectrum-global-color-purple-600:#864ccc;--spectrum-global-color-purple-700:#7a42bf;--spectrum-global-color-indigo-400:#7575f1;--spectrum-global-color-indigo-500:#6767ec;--spectrum-global-color-indigo-600:#5c5ce0;--spectrum-global-color-indigo-700:#5151d3;--spectrum-global-color-seafoam-400:#20a3a8;--spectrum-global-color-seafoam-500:#1b959a;--spectrum-global-color-seafoam-600:#16878c;--spectrum-global-color-seafoam-700:#0f797d;--spectrum-global-color-red-400:#ec5b62;--spectrum-global-color-red-500:#e34850;--spectrum-global-color-red-600:#d7373f;--spectrum-global-color-red-700:#c9252d;--spectrum-global-color-orange-400:#f29423;--spectrum-global-color-orange-500:#e68619;--spectrum-global-color-orange-600:#da7b11;--spectrum-global-color-orange-700:#cb6f10;--spectrum-global-color-green-400:#33ab84;--spectrum-global-color-green-500:#2d9d78;--spectrum-global-color-green-600:#268e6c;--spectrum-global-color-green-700:#12805c;--spectrum-global-color-blue-400:#378ef0;--spectrum-global-color-blue-500:#2680eb;--spectrum-global-color-blue-600:#1473e6;--spectrum-global-color-blue-700:#0d66d0;--spectrum-global-color-gray-50:#fff;--spectrum-global-color-gray-75:#fff;--spectrum-global-color-gray-100:#fff;--spectrum-global-color-gray-200:#f4f4f4;--spectrum-global-color-gray-300:#eaeaea;--spectrum-global-color-gray-400:#d3d3d3;--spectrum-global-color-gray-500:#bcbcbc;--spectrum-global-color-gray-600:#959595;--spectrum-global-color-gray-700:#747474;--spectrum-global-color-gray-800:#505050;--spectrum-global-color-gray-900:#323232;--spectrum-alias-background-color-modal-overlay:rgba(0,0,0,0.4);--spectrum-alias-dropshadow-color:rgba(0,0,0,0.15);--spectrum-alias-background-color-hover-overlay:rgba(50,50,50,0.04);--spectrum-alias-highlight-hover:rgba(50,50,50,0.06);--spectrum-alias-highlight-active:rgba(50,50,50,0.1);--spectrum-alias-highlight-selected:rgba(38,128,235,0.1);--spectrum-alias-highlight-selected-hover:rgba(38,128,235,0.2);--spectrum-alias-text-highlight-color:rgba(38,128,235,0.2);--spectrum-alias-background-color-quickactions:hsla(0,0%,100%,0.9);--spectrum-alias-radial-reaction-color-default:rgba(80,80,80,0.6);--spectrum-alias-pasteboard-background-color:var(--spectrum-global-color-gray-300);--spectrum-alias-appframe-border-color:var(--spectrum-global-color-gray-300);--spectrum-alias-appframe-separator-color:var(--spectrum-global-color-gray-300);--spectrum-tabs-compact-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-compact-vertical-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-compact-vertical-emphasized-rule-color:var(--spectrum-global-color-gray-200);--spectrum-tabs-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-compact-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-tabs-quiet-vertical-emphasized-selection-indicator-color:var(--spectrum-global-color-blue-500);--spectrum-colorarea-border-color:rgba(50,50,50,0.1);--spectrum-colorarea-border-color-hover:rgba(50,50,50,0.1);--spectrum-colorarea-border-color-down:rgba(50,50,50,0.1);--spectrum-colorarea-border-color-key-focus:rgba(50,50,50,0.1);--spectrum-colorslider-border-color:rgba(50,50,50,0.1);--spectrum-colorslider-border-color-hover:rgba(50,50,50,0.1);--spectrum-colorslider-border-color-down:rgba(50,50,50,0.1);--spectrum-colorslider-border-color-key-focus:rgba(50,50,50,0.1);--spectrum-colorslider-vertical-border-color:rgba(50,50,50,0.1);--spectrum-colorslider-vertical-border-color-hover:rgba(50,50,50,0.1);--spectrum-colorslider-vertical-border-color-down:rgba(50,50,50,0.1);--spectrum-colorslider-vertical-border-color-key-focus:rgba(50,50,50,0.1);--spectrum-colorwheel-border-color:rgba(50,50,50,0.1);--spectrum-colorwheel-border-color-hover:rgba(50,50,50,0.1);--spectrum-colorwheel-border-color-down:rgba(50,50,50,0.1);--spectrum-colorwheel-border-color-key-focus:rgba(50,50,50,0.1);--spectrum-miller-column-item-background-color-selected:rgba(38,128,235,0.1);--spectrum-miller-column-item-background-color-selected-hover:rgba(38,128,235,0.2);--spectrum-well-background-color:rgba(80,80,80,0.02);--spectrum-well-border-color:rgba(50,50,50,0.05)}\n`;\nexport default styles;\n//# sourceMappingURL=theme-lightest.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport lightestStyles from './theme-lightest.css.js';\nimport { Theme } from './theme';\nTheme.registerThemeFragment('lightest', 'color', lightestStyles);\n//# sourceMappingURL=theme-lightest.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-dimension-scale-factor:1;--spectrum-global-dimension-size-0:0px;--spectrum-global-dimension-size-10:1px;--spectrum-global-dimension-size-25:2px;--spectrum-global-dimension-size-40:3px;--spectrum-global-dimension-size-50:4px;--spectrum-global-dimension-size-65:5px;--spectrum-global-dimension-size-75:6px;--spectrum-global-dimension-size-85:7px;--spectrum-global-dimension-size-100:8px;--spectrum-global-dimension-size-115:9px;--spectrum-global-dimension-size-125:10px;--spectrum-global-dimension-size-130:11px;--spectrum-global-dimension-size-150:12px;--spectrum-global-dimension-size-160:13px;--spectrum-global-dimension-size-175:14px;--spectrum-global-dimension-size-200:16px;--spectrum-global-dimension-size-225:18px;--spectrum-global-dimension-size-250:20px;--spectrum-global-dimension-size-300:24px;--spectrum-global-dimension-size-350:28px;--spectrum-global-dimension-size-400:32px;--spectrum-global-dimension-size-450:36px;--spectrum-global-dimension-size-500:40px;--spectrum-global-dimension-size-550:44px;--spectrum-global-dimension-size-600:48px;--spectrum-global-dimension-size-675:54px;--spectrum-global-dimension-size-700:56px;--spectrum-global-dimension-size-800:64px;--spectrum-global-dimension-size-900:72px;--spectrum-global-dimension-size-1000:80px;--spectrum-global-dimension-size-1200:96px;--spectrum-global-dimension-size-1250:100px;--spectrum-global-dimension-size-1600:128px;--spectrum-global-dimension-size-1700:136px;--spectrum-global-dimension-size-2000:160px;--spectrum-global-dimension-size-2400:192px;--spectrum-global-dimension-size-3000:240px;--spectrum-global-dimension-size-3400:272px;--spectrum-global-dimension-size-3600:288px;--spectrum-global-dimension-size-4600:368px;--spectrum-global-dimension-size-5000:400px;--spectrum-global-dimension-size-6000:480px;--spectrum-global-dimension-font-size-25:10px;--spectrum-global-dimension-font-size-50:11px;--spectrum-global-dimension-font-size-75:12px;--spectrum-global-dimension-font-size-100:14px;--spectrum-global-dimension-font-size-150:15px;--spectrum-global-dimension-font-size-200:16px;--spectrum-global-dimension-font-size-300:18px;--spectrum-global-dimension-font-size-400:20px;--spectrum-global-dimension-font-size-500:22px;--spectrum-global-dimension-font-size-600:25px;--spectrum-global-dimension-font-size-700:28px;--spectrum-global-dimension-font-size-800:32px;--spectrum-global-dimension-font-size-900:36px;--spectrum-global-dimension-font-size-1000:40px;--spectrum-global-dimension-font-size-1100:45px;--spectrum-global-dimension-font-size-1200:50px;--spectrum-global-dimension-font-size-1300:60px;--spectrum-actionbutton-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-emphasized-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-quiet-emphasized-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-actionbutton-quiet-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-barloader-large-border-radius:3px;--spectrum-barloader-large-indeterminate-border-radius:3px;--spectrum-barloader-large-over-background-border-radius:3px;--spectrum-barloader-small-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-barloader-small-indeterminate-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-barloader-small-over-background-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-breadcrumb-compact-item-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-breadcrumb-compact-button-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-breadcrumb-item-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-breadcrumb-button-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-breadcrumb-multiline-item-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-breadcrumb-multiline-button-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-cta-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-cta-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-cta-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-button-cta-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-over-background-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-over-background-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-over-background-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-button-over-background-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-primary-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-primary-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-primary-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-button-primary-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-quiet-over-background-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-quiet-over-background-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-quiet-over-background-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-over-background-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-quiet-over-background-cursor-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-primary-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-quiet-primary-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-quiet-primary-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-primary-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-quiet-primary-cursor-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-secondary-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-quiet-secondary-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-quiet-secondary-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-secondary-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-quiet-secondary-cursor-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-warning-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-quiet-warning-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-quiet-warning-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-quiet-warning-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-quiet-warning-cursor-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-button-secondary-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-secondary-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-secondary-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-button-secondary-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-button-warning-text-padding-bottom:var(--spectrum-global-dimension-size-85);--spectrum-button-warning-min-width:var(--spectrum-global-dimension-size-900);--spectrum-button-warning-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-button-warning-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-checkbox-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-checkbox-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-checkbox-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-checkbox-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-circleloader-medium-border-size:3px;--spectrum-circleloader-medium-over-background-border-size:3px;--spectrum-circleloader-small-border-size:var(--spectrum-global-dimension-static-size-25);--spectrum-circleloader-small-over-background-border-size:var(--spectrum-global-dimension-static-size-25);--spectrum-colorhandle-loupe-margin:var(--spectrum-global-dimension-static-size-125);--spectrum-colorslider-touch-hit-y:var(--spectrum-global-dimension-size-150);--spectrum-colorslider-vertical-touch-hit-x:var(--spectrum-global-dimension-size-150);--spectrum-colorwheel-min-size:var(--spectrum-global-dimension-size-2400);--spectrum-colorwheel-touch-hit-outer:var(--spectrum-global-dimension-size-150);--spectrum-colorwheel-touch-hit-inner:var(--spectrum-global-dimension-size-150);--spectrum-cyclebutton-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-cyclebutton-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-dialog-confirm-max-width:var(--spectrum-global-dimension-static-size-6000);--spectrum-dialog-confirm-title-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-dialog-confirm-description-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-dialog-confirm-padding:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-confirm-description-margin-bottom:var(--spectrum-global-dimension-static-size-600);--spectrum-dialog-max-width:var(--spectrum-global-dimension-static-size-6000);--spectrum-dialog-title-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-dialog-content-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-dialog-padding:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-content-margin-bottom:var(--spectrum-global-dimension-static-size-600);--spectrum-dialog-destructive-max-width:var(--spectrum-global-dimension-static-size-6000);--spectrum-dialog-destructive-title-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-dialog-destructive-description-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-dialog-destructive-padding:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-destructive-description-margin-bottom:var(--spectrum-global-dimension-static-size-600);--spectrum-dialog-error-max-width:var(--spectrum-global-dimension-static-size-6000);--spectrum-dialog-error-title-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-dialog-error-description-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-dialog-error-padding:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-error-description-margin-bottom:var(--spectrum-global-dimension-static-size-600);--spectrum-dialog-info-max-width:var(--spectrum-global-dimension-static-size-6000);--spectrum-dialog-info-title-text-size:var(--spectrum-global-dimension-font-size-300);--spectrum-dialog-info-description-text-size:var(--spectrum-global-dimension-font-size-100);--spectrum-dialog-info-padding:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-info-description-margin-bottom:var(--spectrum-global-dimension-static-size-600);--spectrum-dropdown-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-dropdown-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-dropdown-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-400);--spectrum-dropdown-thumbnail-small-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-dropdown-thumbnail-small-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-fieldbutton-quiet-min-width:var(--spectrum-global-dimension-size-225);--spectrum-icon-arrow-down-small-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-arrow-left-medium-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-checkmark-medium-width:var(--spectrum-global-dimension-size-150);--spectrum-icon-checkmark-medium-height:var(--spectrum-global-dimension-size-150);--spectrum-icon-checkmark-small-width:var(--spectrum-global-dimension-size-125);--spectrum-icon-checkmark-small-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-chevron-down-medium-width:var(--spectrum-global-dimension-size-125);--spectrum-icon-chevron-left-large-width:var(--spectrum-global-dimension-size-150);--spectrum-icon-chevron-left-medium-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-chevron-right-large-width:var(--spectrum-global-dimension-size-150);--spectrum-icon-chevron-right-medium-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-cross-large-width:var(--spectrum-global-dimension-size-150);--spectrum-icon-cross-large-height:var(--spectrum-global-dimension-size-150);--spectrum-icon-dash-small-width:var(--spectrum-global-dimension-size-125);--spectrum-icon-dash-small-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-skip-left-width:9px;--spectrum-icon-skip-left-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-skip-right-width:9px;--spectrum-icon-skip-right-height:var(--spectrum-global-dimension-size-125);--spectrum-icon-triplegripper-width:var(--spectrum-global-dimension-size-125);--spectrum-loader-bar-large-border-radius:3px;--spectrum-loader-bar-large-over-background-border-radius:3px;--spectrum-loader-bar-small-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-loader-bar-small-over-background-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-loader-circle-medium-border-size:3px;--spectrum-loader-circle-medium-over-background-border-size:3px;--spectrum-loader-circle-small-border-size:var(--spectrum-global-dimension-static-size-25);--spectrum-loader-circle-small-over-background-border-size:var(--spectrum-global-dimension-static-size-25);--spectrum-meter-large-border-radius:3px;--spectrum-meter-small-border-radius:var(--spectrum-global-dimension-static-size-25);--spectrum-pagination-page-button-line-height:26px;--spectrum-radio-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-margin-bottom:0px;--spectrum-radio-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-radio-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-emphasized-margin-bottom:0px;--spectrum-radio-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-radio-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-radio-quiet-margin-bottom:0px;--spectrum-radio-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-rating-icon-width:24px;--spectrum-rating-indicator-width:16px;--spectrum-rating-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-rating-emphasized-icon-width:24px;--spectrum-rating-emphasized-indicator-width:16px;--spectrum-rating-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-rating-quiet-icon-width:24px;--spectrum-rating-quiet-indicator-width:16px;--spectrum-rating-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-search-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-search-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-search-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-search-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-search-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-search-quiet-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-selectlist-option-icon-size:var(--spectrum-global-dimension-static-size-150);--spectrum-selectlist-option-icon-padding-y:var(--spectrum-global-dimension-static-size-125);--spectrum-selectlist-option-icon-margin-top:var(--spectrum-global-dimension-static-size-65);--spectrum-selectlist-option-height:var(--spectrum-global-dimension-static-size-400);--spectrum-selectlist-thumbnail-option-icon-padding-y:var(--spectrum-global-dimension-static-size-125);--spectrum-selectlist-thumbnail-small-option-icon-padding-y:var(--spectrum-global-dimension-static-size-125);--spectrum-sidenav-item-touch-hit-bottom:var(--spectrum-global-dimension-static-size-25);--spectrum-sidenav-multilevel-item-touch-hit-bottom:var(--spectrum-global-dimension-static-size-25);--spectrum-slider-track-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-slider-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-slider-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-200);--spectrum-slider-editable-track-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-slider-editable-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-slider-editable-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-200);--spectrum-slider-fill-track-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-slider-fill-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-200);--spectrum-slider-fill-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-200);--spectrum-switch-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-track-width:26px;--spectrum-switch-handle-border-radius:7px;--spectrum-switch-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-switch-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-emphasized-track-width:26px;--spectrum-switch-emphasized-handle-border-radius:7px;--spectrum-switch-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-switch-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-115);--spectrum-switch-quiet-track-width:26px;--spectrum-switch-quiet-handle-border-radius:7px;--spectrum-switch-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-tabs-compact-focus-ring-border-radius:5px;--spectrum-tabs-compact-margin-left:-8px;--spectrum-tabs-compact-margin-right:-8px;--spectrum-tabs-compact-vertical-focus-ring-border-radius:5px;--spectrum-tabs-compact-vertical-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-focus-ring-border-radius:5px;--spectrum-tabs-margin-left:-8px;--spectrum-tabs-margin-right:-8px;--spectrum-tabs-emphasized-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-emphasized-margin-left:-8px;--spectrum-tabs-emphasized-margin-right:-8px;--spectrum-tabs-quiet-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-quiet-focus-ring-border-radius:5px;--spectrum-tabs-quiet-margin-left:-8px;--spectrum-tabs-quiet-margin-right:-8px;--spectrum-tabs-quiet-compact-focus-ring-border-radius:5px;--spectrum-tabs-quiet-compact-margin-left:-8px;--spectrum-tabs-quiet-compact-margin-right:-8px;--spectrum-tabs-quiet-compact-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-quiet-compact-emphasized-margin-left:-8px;--spectrum-tabs-quiet-compact-emphasized-margin-right:-8px;--spectrum-tabs-quiet-compact-vertical-focus-ring-border-radius:5px;--spectrum-tabs-quiet-compact-vertical-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-quiet-emphasized-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-quiet-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-quiet-emphasized-margin-left:-8px;--spectrum-tabs-quiet-emphasized-margin-right:-8px;--spectrum-tabs-quiet-vertical-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-quiet-vertical-focus-ring-border-radius:5px;--spectrum-tabs-quiet-vertical-emphasized-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-quiet-vertical-emphasized-focus-ring-border-radius:5px;--spectrum-tabs-vertical-baseline:var(--spectrum-global-dimension-size-225);--spectrum-tabs-vertical-focus-ring-border-radius:5px;--spectrum-textarea-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-textarea-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-textarea-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-textarea-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-textarea-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-textarea-quiet-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-textfield-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-textfield-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-textfield-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-textfield-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-textfield-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-textfield-quiet-icon-frame:var(--spectrum-global-dimension-static-size-400);--spectrum-tool-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-tool-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-tool-high-emphasis-touch-hit-x:var(--spectrum-global-dimension-static-size-100);--spectrum-tool-high-emphasis-touch-hit-y:var(--spectrum-global-dimension-static-size-100);--spectrum-tooltip-padding-bottom:5px;--spectrum-tooltip-content-max-width:101px;--spectrum-tooltip-info-padding-bottom:5px;--spectrum-tooltip-info-content-max-width:101px;--spectrum-tooltip-negative-padding-bottom:5px;--spectrum-tooltip-negative-content-max-width:101px;--spectrum-tooltip-positive-padding-bottom:5px;--spectrum-tooltip-positive-content-max-width:101px}\n`;\nexport default styles;\n//# sourceMappingURL=scale-medium.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport mediumStyles from './scale-medium.css.js';\nimport { Theme } from './theme';\nTheme.registerThemeFragment('medium', 'scale', mediumStyles);\n//# sourceMappingURL=scale-medium.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host,:root{--spectrum-global-dimension-scale-factor:1.25;--spectrum-global-dimension-size-0:0px;--spectrum-global-dimension-size-10:1px;--spectrum-global-dimension-size-25:2px;--spectrum-global-dimension-size-40:4px;--spectrum-global-dimension-size-50:5px;--spectrum-global-dimension-size-65:6px;--spectrum-global-dimension-size-75:8px;--spectrum-global-dimension-size-85:9px;--spectrum-global-dimension-size-100:10px;--spectrum-global-dimension-size-115:11px;--spectrum-global-dimension-size-125:13px;--spectrum-global-dimension-size-130:14px;--spectrum-global-dimension-size-150:15px;--spectrum-global-dimension-size-160:16px;--spectrum-global-dimension-size-175:18px;--spectrum-global-dimension-size-200:20px;--spectrum-global-dimension-size-225:22px;--spectrum-global-dimension-size-250:25px;--spectrum-global-dimension-size-300:30px;--spectrum-global-dimension-size-350:35px;--spectrum-global-dimension-size-400:40px;--spectrum-global-dimension-size-450:45px;--spectrum-global-dimension-size-500:50px;--spectrum-global-dimension-size-550:56px;--spectrum-global-dimension-size-600:60px;--spectrum-global-dimension-size-675:68px;--spectrum-global-dimension-size-700:70px;--spectrum-global-dimension-size-800:80px;--spectrum-global-dimension-size-900:112px;--spectrum-global-dimension-size-1000:100px;--spectrum-global-dimension-size-1200:120px;--spectrum-global-dimension-size-1250:125px;--spectrum-global-dimension-size-1600:160px;--spectrum-global-dimension-size-1700:212px;--spectrum-global-dimension-size-2000:200px;--spectrum-global-dimension-size-2400:240px;--spectrum-global-dimension-size-3000:300px;--spectrum-global-dimension-size-3400:340px;--spectrum-global-dimension-size-3600:360px;--spectrum-global-dimension-size-4600:460px;--spectrum-global-dimension-size-5000:500px;--spectrum-global-dimension-size-6000:600px;--spectrum-global-dimension-font-size-25:12px;--spectrum-global-dimension-font-size-50:13px;--spectrum-global-dimension-font-size-75:15px;--spectrum-global-dimension-font-size-100:17px;--spectrum-global-dimension-font-size-150:18px;--spectrum-global-dimension-font-size-200:19px;--spectrum-global-dimension-font-size-300:22px;--spectrum-global-dimension-font-size-400:24px;--spectrum-global-dimension-font-size-500:27px;--spectrum-global-dimension-font-size-600:31px;--spectrum-global-dimension-font-size-700:34px;--spectrum-global-dimension-font-size-800:39px;--spectrum-global-dimension-font-size-900:44px;--spectrum-global-dimension-font-size-1000:49px;--spectrum-global-dimension-font-size-1100:55px;--spectrum-global-dimension-font-size-1200:62px;--spectrum-global-dimension-font-size-1300:70px;--spectrum-actionbutton-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-emphasized-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-quiet-emphasized-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-actionbutton-quiet-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-barloader-large-border-radius:4px;--spectrum-barloader-large-indeterminate-border-radius:4px;--spectrum-barloader-large-over-background-border-radius:4px;--spectrum-barloader-small-border-radius:3px;--spectrum-barloader-small-indeterminate-border-radius:3px;--spectrum-barloader-small-over-background-border-radius:3px;--spectrum-breadcrumb-compact-item-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-breadcrumb-compact-button-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-breadcrumb-item-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-breadcrumb-button-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-breadcrumb-multiline-item-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-breadcrumb-multiline-button-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-cta-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-cta-min-width:90px;--spectrum-button-cta-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-button-cta-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-over-background-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-over-background-min-width:90px;--spectrum-button-over-background-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-button-over-background-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-primary-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-primary-min-width:90px;--spectrum-button-primary-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-button-primary-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-quiet-over-background-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-quiet-over-background-min-width:90px;--spectrum-button-quiet-over-background-touch-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-over-background-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-quiet-over-background-cursor-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-primary-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-quiet-primary-min-width:90px;--spectrum-button-quiet-primary-touch-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-primary-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-quiet-primary-cursor-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-secondary-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-quiet-secondary-min-width:90px;--spectrum-button-quiet-secondary-touch-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-secondary-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-quiet-secondary-cursor-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-warning-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-quiet-warning-min-width:90px;--spectrum-button-quiet-warning-touch-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-quiet-warning-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-quiet-warning-cursor-hit-x:var(--spectrum-global-dimension-static-size-250);--spectrum-button-secondary-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-secondary-min-width:90px;--spectrum-button-secondary-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-button-secondary-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-button-warning-text-padding-bottom:var(--spectrum-global-dimension-size-100);--spectrum-button-warning-min-width:90px;--spectrum-button-warning-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-button-warning-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-checkbox-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-checkbox-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-checkbox-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-text-gap-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-text-gap-error-indeterminate-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-checkbox-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-circleloader-medium-border-size:var(--spectrum-global-dimension-static-size-50);--spectrum-circleloader-medium-over-background-border-size:var(--spectrum-global-dimension-static-size-50);--spectrum-circleloader-small-border-size:3px;--spectrum-circleloader-small-over-background-border-size:3px;--spectrum-colorhandle-loupe-margin:var(--spectrum-global-dimension-static-size-100);--spectrum-colorslider-touch-hit-y:var(--spectrum-global-dimension-size-85);--spectrum-colorslider-vertical-touch-hit-x:var(--spectrum-global-dimension-size-85);--spectrum-colorwheel-min-size:var(--spectrum-global-dimension-static-size-2600);--spectrum-colorwheel-touch-hit-outer:var(--spectrum-global-dimension-size-85);--spectrum-colorwheel-touch-hit-inner:var(--spectrum-global-dimension-size-85);--spectrum-cyclebutton-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-cyclebutton-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-dialog-confirm-max-width:var(--spectrum-global-dimension-static-size-5000);--spectrum-dialog-confirm-title-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-dialog-confirm-description-text-size:var(--spectrum-global-dimension-font-size-75);--spectrum-dialog-confirm-padding:var(--spectrum-global-dimension-static-size-300);--spectrum-dialog-confirm-description-margin-bottom:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-max-width:var(--spectrum-global-dimension-static-size-5000);--spectrum-dialog-title-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-dialog-content-text-size:var(--spectrum-global-dimension-font-size-75);--spectrum-dialog-padding:var(--spectrum-global-dimension-static-size-300);--spectrum-dialog-content-margin-bottom:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-destructive-max-width:var(--spectrum-global-dimension-static-size-5000);--spectrum-dialog-destructive-title-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-dialog-destructive-description-text-size:var(--spectrum-global-dimension-font-size-75);--spectrum-dialog-destructive-padding:var(--spectrum-global-dimension-static-size-300);--spectrum-dialog-destructive-description-margin-bottom:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-error-max-width:var(--spectrum-global-dimension-static-size-5000);--spectrum-dialog-error-title-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-dialog-error-description-text-size:var(--spectrum-global-dimension-font-size-75);--spectrum-dialog-error-padding:var(--spectrum-global-dimension-static-size-300);--spectrum-dialog-error-description-margin-bottom:var(--spectrum-global-dimension-static-size-500);--spectrum-dialog-info-max-width:var(--spectrum-global-dimension-static-size-5000);--spectrum-dialog-info-title-text-size:var(--spectrum-global-dimension-font-size-200);--spectrum-dialog-info-description-text-size:var(--spectrum-global-dimension-font-size-75);--spectrum-dialog-info-padding:var(--spectrum-global-dimension-static-size-300);--spectrum-dialog-info-description-margin-bottom:var(--spectrum-global-dimension-static-size-500);--spectrum-dropdown-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-dropdown-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-dropdown-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-dropdown-thumbnail-small-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-dropdown-thumbnail-small-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-fieldbutton-quiet-min-width:var(--spectrum-global-dimension-size-200);--spectrum-icon-arrow-down-small-height:12px;--spectrum-icon-arrow-left-medium-height:12px;--spectrum-icon-checkmark-medium-width:16px;--spectrum-icon-checkmark-medium-height:16px;--spectrum-icon-checkmark-small-width:12px;--spectrum-icon-checkmark-small-height:12px;--spectrum-icon-chevron-down-medium-width:12px;--spectrum-icon-chevron-left-large-width:16px;--spectrum-icon-chevron-left-medium-height:12px;--spectrum-icon-chevron-right-large-width:16px;--spectrum-icon-chevron-right-medium-height:12px;--spectrum-icon-cross-large-width:16px;--spectrum-icon-cross-large-height:16px;--spectrum-icon-dash-small-width:12px;--spectrum-icon-dash-small-height:12px;--spectrum-icon-skip-left-width:10px;--spectrum-icon-skip-left-height:12px;--spectrum-icon-skip-right-width:10px;--spectrum-icon-skip-right-height:12px;--spectrum-icon-triplegripper-width:12px;--spectrum-loader-bar-large-border-radius:4px;--spectrum-loader-bar-large-over-background-border-radius:4px;--spectrum-loader-bar-small-border-radius:3px;--spectrum-loader-bar-small-over-background-border-radius:3px;--spectrum-loader-circle-medium-border-size:var(--spectrum-global-dimension-static-size-50);--spectrum-loader-circle-medium-over-background-border-size:var(--spectrum-global-dimension-static-size-50);--spectrum-loader-circle-small-border-size:3px;--spectrum-loader-circle-small-over-background-border-size:3px;--spectrum-meter-large-border-radius:4px;--spectrum-meter-small-border-radius:3px;--spectrum-pagination-page-button-line-height:32px;--spectrum-radio-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-margin-bottom:var(--spectrum-global-dimension-static-size-100);--spectrum-radio-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-radio-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-emphasized-margin-bottom:var(--spectrum-global-dimension-static-size-100);--spectrum-radio-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-radio-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-radio-quiet-margin-bottom:var(--spectrum-global-dimension-static-size-100);--spectrum-radio-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-rating-icon-width:30px;--spectrum-rating-indicator-width:20px;--spectrum-rating-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-rating-emphasized-icon-width:30px;--spectrum-rating-emphasized-indicator-width:20px;--spectrum-rating-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-rating-quiet-icon-width:30px;--spectrum-rating-quiet-indicator-width:20px;--spectrum-rating-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-search-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-search-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-search-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-search-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-search-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-search-quiet-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-selectlist-option-icon-size:var(--spectrum-global-dimension-static-size-200);--spectrum-selectlist-option-icon-padding-y:var(--spectrum-global-dimension-static-size-200);--spectrum-selectlist-option-icon-margin-top:var(--spectrum-global-dimension-static-size-50);--spectrum-selectlist-option-height:var(--spectrum-global-dimension-static-size-600);--spectrum-selectlist-thumbnail-option-icon-padding-y:var(--spectrum-global-dimension-static-size-200);--spectrum-selectlist-thumbnail-small-option-icon-padding-y:var(--spectrum-global-dimension-static-size-200);--spectrum-sidenav-item-touch-hit-bottom:3px;--spectrum-sidenav-multilevel-item-touch-hit-bottom:3px;--spectrum-slider-track-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-slider-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-175);--spectrum-slider-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-175);--spectrum-slider-editable-track-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-slider-editable-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-175);--spectrum-slider-editable-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-175);--spectrum-slider-fill-track-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-slider-fill-handle-touch-hit-x:var(--spectrum-global-dimension-static-size-175);--spectrum-slider-fill-handle-touch-hit-y:var(--spectrum-global-dimension-static-size-175);--spectrum-switch-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-track-width:var(--spectrum-global-dimension-static-size-450);--spectrum-switch-handle-border-radius:9px;--spectrum-switch-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-switch-emphasized-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-emphasized-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-emphasized-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-emphasized-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-emphasized-track-width:var(--spectrum-global-dimension-static-size-450);--spectrum-switch-emphasized-handle-border-radius:9px;--spectrum-switch-emphasized-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-switch-quiet-text-gap-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-quiet-text-gap-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-quiet-text-gap-error-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-quiet-text-gap-error-selected-key-focus:var(--spectrum-global-dimension-static-size-150);--spectrum-switch-quiet-track-width:var(--spectrum-global-dimension-static-size-450);--spectrum-switch-quiet-handle-border-radius:9px;--spectrum-switch-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-tabs-compact-focus-ring-border-radius:6px;--spectrum-tabs-compact-margin-left:-11px;--spectrum-tabs-compact-margin-right:-11px;--spectrum-tabs-compact-vertical-focus-ring-border-radius:6px;--spectrum-tabs-compact-vertical-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-focus-ring-border-radius:6px;--spectrum-tabs-margin-left:-11px;--spectrum-tabs-margin-right:-11px;--spectrum-tabs-emphasized-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-emphasized-margin-left:-11px;--spectrum-tabs-emphasized-margin-right:-11px;--spectrum-tabs-quiet-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-quiet-focus-ring-border-radius:6px;--spectrum-tabs-quiet-margin-left:-11px;--spectrum-tabs-quiet-margin-right:-11px;--spectrum-tabs-quiet-compact-focus-ring-border-radius:6px;--spectrum-tabs-quiet-compact-margin-left:-11px;--spectrum-tabs-quiet-compact-margin-right:-11px;--spectrum-tabs-quiet-compact-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-quiet-compact-emphasized-margin-left:-11px;--spectrum-tabs-quiet-compact-emphasized-margin-right:-11px;--spectrum-tabs-quiet-compact-vertical-focus-ring-border-radius:6px;--spectrum-tabs-quiet-compact-vertical-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-quiet-emphasized-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-quiet-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-quiet-emphasized-margin-left:-11px;--spectrum-tabs-quiet-emphasized-margin-right:-11px;--spectrum-tabs-quiet-vertical-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-quiet-vertical-focus-ring-border-radius:6px;--spectrum-tabs-quiet-vertical-emphasized-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-quiet-vertical-emphasized-focus-ring-border-radius:6px;--spectrum-tabs-vertical-baseline:var(--spectrum-global-dimension-size-250);--spectrum-tabs-vertical-focus-ring-border-radius:6px;--spectrum-textarea-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-textarea-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-textarea-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-textarea-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-textarea-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-textarea-quiet-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-textfield-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-textfield-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-textfield-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-textfield-quiet-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-textfield-quiet-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-textfield-quiet-icon-frame:var(--spectrum-global-dimension-static-size-500);--spectrum-tool-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-tool-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-tool-high-emphasis-touch-hit-x:var(--spectrum-global-dimension-static-size-50);--spectrum-tool-high-emphasis-touch-hit-y:var(--spectrum-global-dimension-static-size-50);--spectrum-tooltip-padding-bottom:6px;--spectrum-tooltip-content-max-width:126px;--spectrum-tooltip-info-padding-bottom:6px;--spectrum-tooltip-info-content-max-width:126px;--spectrum-tooltip-negative-padding-bottom:6px;--spectrum-tooltip-negative-content-max-width:126px;--spectrum-tooltip-positive-padding-bottom:6px;--spectrum-tooltip-positive-content-max-width:126px}\n`;\nexport default styles;\n//# sourceMappingURL=scale-large.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport largeStyles from './scale-large.css.js';\nimport { Theme } from './theme';\nTheme.registerThemeFragment('large', 'scale', largeStyles);\n//# sourceMappingURL=scale-large.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport * from './theme.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport './theme-lightest.js';\nimport './scale-medium.js';\nimport './scale-large.js';\nimport { Theme } from './theme.js';\n/* istanbul ignore else */\nif (!customElements.get('sp-theme')) {\n    customElements.define('sp-theme', Theme);\n}\n//# sourceMappingURL=index.js.map"],"names":["options","protoOrDescriptor","name","undefined","legacyProperty","standardProperty","selector","descriptor","get","this","renderRoot","querySelector","enumerable","configurable","legacyQuery","standardQuery","window","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","value","type","Boolean","Object","Array","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","String","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","UpdatingElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","Map","_reflectingProperties","initialize","_saveInstanceProperties","_requestUpdate","constructor","_classProperties","forEach","_v","p","_this2","hasOwnProperty","set","v","_this3","_attributeToProperty","ctor","attr","_attributeNameForProperty","attrValue","_propertyValueToAttribute","removeAttribute","setAttribute","propName","_attributeToPropertyMap","_propertyValueFromAttribute","oldValue","shouldRequestUpdate","_valueHasChanged","has","_hasRequestedUpdate","_enqueueUpdate","updateComplete","previousUpdatePromise","res","rej","reject","_hasConnected","_this4","result","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","update","e","_markUpdated","firstUpdated","updated","size","k","_this5","_propertyToAttribute","_getUpdateComplete","superProperties","getPrototypeOf","_this6","_ensureClassProperties","noAccessor","prototype","key","_typeof","Symbol","defineProperty","superCtor","finalize","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","toLowerCase","attributes","_this7","push","HTMLElement","tagName","classOrDescriptor","clazz","customElements","define","legacyCustomElement","kind","elements","finisher","standardCustomElement","element","placement","initializer","call","assign","proto","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","Error","_styleSheet","replaceSync","textFromCSSResult","css","strings","values","reduce","acc","idx","flattenStyles","styles","flat","Infinity","arrayFlat","i","length","isArray","LitElement","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","_styles","ShadyCSS","nativeShadow","adoptedStyleSheets","map","s","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","hasUpdated","styleElement","templateResult","render","TemplateResult","scopeName","eventContext","style","document","createElement","textContent","_this","appendChild","_getUniqueStyles","userStyles","reduceRight","add","Set","unshift","DefaultColor","DefaultScale","Theme","shadowRoot","node","importNode","template","content","addEventListener","onQueryTheme","event","defaultPrevented","preventDefault","theme","detail","color","scale","fragmentCSS","themeFragments","defaultFragments","replace","prepareTemplate","styleSheets","styleNodes","querySelectorAll","remove","getAttribute","colorFragment","newValue","scaleFragment","coreStyles","themeFragment","fragment","templateElement","innerHTML","registerThemeFragment","darkStyles","lightStyles","lightestStyles","mediumStyles","largeStyles"],"mappings":"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"}