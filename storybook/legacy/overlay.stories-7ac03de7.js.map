{"version":3,"file":"overlay.stories-7ac03de7.js","sources":["../../../../packages/overlay/stories/overlay-story-components.js","../../../../packages/overlay/stories/overlay.stories.js"],"sourcesContent":["import { __decorate } from \"tslib\";\n/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { LitElement, html, css, property, } from 'lit-element';\nimport { Overlay } from '../';\n// Prevent infinite recursion in browser\nconst MAX_DEPTH = 7;\nclass OverlayTargetIcon extends LitElement {\n    static get styles() {\n        return css `\n            :host {\n                position: absolute;\n                display: block;\n                color: var(--spectrum-global-color-magenta-700);\n                width: 64px;\n                height: 64px;\n            }\n        `;\n    }\n    render() {\n        return html `\n            <svg\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                data-prefix=\"fas\"\n                data-icon=\"bullseye\"\n                class=\"svg-inline--fa fa-bullseye fa-w-16\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 496 512\"\n            >\n                <path\n                    fill=\"currentColor\"\n                    d=\"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z\"\n                ></path>\n            </svg>\n        `;\n    }\n}\ncustomElements.define('overlay-target-icon', OverlayTargetIcon);\nclass OverlayDrag extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.top = 100;\n        this.left = 100;\n    }\n    static get styles() {\n        return css `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                position: relative;\n            }\n\n            ::slotted(*) {\n                display: block;\n                width: 100%;\n                height: 100%;\n            }\n        `;\n    }\n    onSlotChange(event) {\n        if (!event.target) {\n            return;\n        }\n        const slot = event.target;\n        this.targetElement = undefined;\n        const nodes = slot.assignedNodes();\n        const slotElement = nodes.find((node) => node instanceof HTMLElement);\n        if (!slotElement)\n            return;\n        this.targetElement = slotElement.querySelector('[slot=\"trigger\"]');\n        if (!this.targetElement)\n            return;\n        this.targetElement.addEventListener('mousedown', (event) => this.onMouseDown(event));\n        this.resetTargetPosition();\n    }\n    onMouseDown(event) {\n        const target = event.target;\n        const parent = target.parentElement;\n        if (!parent)\n            return;\n        const max = {\n            x: parent.offsetWidth - target.offsetWidth,\n            y: parent.offsetHeight - target.offsetHeight,\n        };\n        const dragStart = {\n            x: event.clientX,\n            y: event.clientY,\n        };\n        const originalPos = {\n            x: this.left,\n            y: this.top,\n        };\n        const onMouseMove = (event) => {\n            const dragDelta = {\n                x: event.clientX - dragStart.x,\n                y: event.clientY - dragStart.y,\n            };\n            const newPosition = {\n                x: dragDelta.x + originalPos.x,\n                y: dragDelta.y + originalPos.y,\n            };\n            this.left = Math.min(Math.max(newPosition.x, 0), max.x);\n            this.top = Math.min(Math.max(newPosition.y, 0), max.y);\n            Overlay.update();\n        };\n        const onMouseUp = () => {\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n        };\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n    resetTargetPosition() {\n        if (!this.targetElement)\n            return;\n        const target = this.targetElement;\n        const parent = target.parentElement;\n        if (!parent)\n            return;\n        this.left = (parent.offsetWidth - target.offsetWidth) / 2;\n        this.top = (parent.offsetHeight - target.offsetHeight) / 2;\n    }\n    updated() {\n        if (this.targetElement) {\n            this.targetElement.style.transform = `translate(${this.left}px, ${this.top}px)`;\n        }\n    }\n    render() {\n        return html `\n            <slot @slotchange=${this.onSlotChange}></slot>\n        `;\n    }\n}\n__decorate([\n    property({ type: Number })\n], OverlayDrag.prototype, \"top\", void 0);\n__decorate([\n    property({ type: Number })\n], OverlayDrag.prototype, \"left\", void 0);\ncustomElements.define('overlay-drag', OverlayDrag);\nclass RecursivePopover extends LitElement {\n    constructor() {\n        super();\n        this.depth = 0;\n        this.placement = 'right';\n        this.depth = 0;\n    }\n    static get styles() {\n        return [\n            css `\n                :host {\n                    display: block;\n                    text-align: center;\n                }\n\n                sp-button {\n                    margin-top: 11px;\n                }\n            `,\n        ];\n    }\n    onRadioChange(event) {\n        const target = event.target;\n        this.placement = target.value;\n    }\n    render() {\n        return html `\n            <sp-radio-group selected=\"${this.placement}\" name=\"group-example\">\n                <sp-radio @change=${this.onRadioChange} value=\"top\">\n                    Top\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"right\">\n                    Right\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"bottom\">\n                    Bottom\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"left\">\n                    Left\n                </sp-radio>\n            </sp-radio-group>\n            <overlay-trigger placement=\"${this.placement}\">\n                <sp-button slot=\"trigger\" variant=\"cta\">Open Popover</sp-button>\n                <sp-popover\n                    dialog\n                    slot=\"click-content\"\n                    direction=\"${this.placement}\"\n                    tip\n                    open\n                >\n                    ${this.depth < MAX_DEPTH\n            ? html `\n                              <recursive-popover\n                                  position=\"${this.placement}\"\n                                  depth=\"${this.depth + 1}\"\n                              ></recursive-popover>\n                          `\n            : html `\n                              <div>Maximum Depth</div>\n                          `}\n                </sp-popover>\n            </overlay-trigger>\n        `;\n    }\n}\n__decorate([\n    property({ type: String })\n], RecursivePopover.prototype, \"placement\", void 0);\n__decorate([\n    property({ type: Number })\n], RecursivePopover.prototype, \"depth\", void 0);\ncustomElements.define('recursive-popover', RecursivePopover);\n//# sourceMappingURL=overlay-story-components.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, number, select, radios } from '@open-wc/demoing-storybook';\nimport '../../button';\nimport '../../popover';\nimport '../../slider';\nimport '../../radio';\nimport '../../radio-group';\nimport '../../tooltip';\nimport '../../theme';\nimport './overlay-story-components';\nconst storyStyles = html `\n    <style>\n        html,\n        body,\n        #root,\n        #root-inner,\n        #root-theme {\n            height: 100%;\n            margin: 0;\n        }\n\n        #root-theme {\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            height: 100%;\n            align-items: center;\n            justify-content: center;\n        }\n\n        overlay-trigger {\n            flex: none;\n        }\n\n        #styled-div {\n            background-color: blue;\n            color: white;\n            padding: 4px 10px;\n            margin-bottom: 10px;\n        }\n\n        #inner-trigger {\n            display: inline-block;\n        }\n    </style>\n`;\nexport default {\n    title: 'Overlay',\n};\nexport const Default = () => {\n    const placement = select('Placement', [\n        'top',\n        'top-start',\n        'top-end',\n        'bottom',\n        'bottom-start',\n        'bottom-end',\n        'left',\n        'left-start',\n        'left-end',\n        'right',\n        'right-start',\n        'right-end',\n        'auto',\n        'auto-start',\n        'auto-end',\n        'none',\n    ], 'bottom');\n    const offset = number('Offset', 0);\n    return html `\n        ${storyStyles}\n        <overlay-trigger\n            id=\"trigger\"\n            placement=\"${placement}\"\n            offset=\"${offset}\"\n        >\n            <sp-button variant=\"primary\" slot=\"trigger\">\n                Show Popover\n            </sp-button>\n            <sp-popover\n                dialog\n                slot=\"click-content\"\n                placement=\"${placement}\"\n                tip\n                open\n            >\n                <div class=\"options-popover-content\">\n                    <sp-slider\n                        value=\"5\"\n                        step=\"0.5\"\n                        min=\"0\"\n                        max=\"20\"\n                        label=\"Awesomeness\"\n                    ></sp-slider>\n                    <div id=\"styled-div\">\n                        The background of this div should be blue\n                    </div>\n                    <overlay-trigger id=\"inner-trigger\" placement=\"bottom\">\n                        <sp-button slot=\"trigger\">Press Me</sp-button>\n                        <sp-popover\n                            dialog\n                            slot=\"click-content\"\n                            placement=\"bottom\"\n                            tip\n                            open\n                        >\n                            <div class=\"options-popover-content\">\n                                Another Popover\n                            </div>\n                        </sp-popover>\n\n                        <sp-tooltip\n                            slot=\"hover-content\"\n                            delayed\n                            open\n                            tip=\"bottom\"\n                        >\n                            Click to open another popover.\n                        </sp-tooltip>\n                    </overlay-trigger>\n                </div>\n            </sp-popover>\n            <sp-tooltip open slot=\"hover-content\" delayed tip=\"bottom\">\n                Click to open a popover.\n            </sp-tooltip>\n        </overlay-trigger>\n    `;\n};\nexport const deepNesting = () => {\n    const colorOptions = {\n        Light: 'light',\n        Dark: 'dark',\n    };\n    const color = radios('Color stop', colorOptions, colorOptions.Light);\n    const outter = color === 'light' ? 'dark' : 'light';\n    return html `\n        ${storyStyles}\n        <sp-theme color=${outter}>\n            <sp-theme color=${color}>\n                <recursive-popover\n                    style=\"\n                        background-color: var(--spectrum-global-color-gray-100);\n                        color: var(--spectrum-global-color-gray-800);\n                        padding: var(--spectrum-global-dimension-size-225);\n                    \"\n                ></recursive-popover>\n            </sp-theme>\n        </sp-theme>\n    `;\n};\nexport const edges = () => {\n    return html `\n        <style>\n            .demo {\n                position: absolute;\n            }\n            .top-left {\n                top: 0;\n                left: 0;\n            }\n            .top-right {\n                top: 0;\n                right: 0;\n            }\n            .bottom-right {\n                bottom: 0;\n                right: 0;\n            }\n            .bottom-left {\n                bottom: 0;\n                left: 0;\n            }\n        </style>\n        <overlay-trigger class=\"demo top-left\" placement=\"bottom\">\n            <sp-button slot=\"trigger\">\n                Top/\n                <br />\n                Left\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delayed open tip=\"bottom\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger class=\"demo top-right\" placement=\"bottom\">\n            <sp-button slot=\"trigger\">\n                Top/\n                <br />\n                Right\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delayed open tip=\"bottom\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger class=\"demo bottom-left\" placement=\"top\">\n            <sp-button slot=\"trigger\">\n                Bottom/\n                <br />\n                Left\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delayed open tip=\"top\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger placement=\"top\" class=\"demo bottom-right\">\n            <sp-button slot=\"trigger\">\n                Bottom/\n                <br />\n                Right\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delayed open tip=\"top\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n    `;\n};\nexport const updated = () => {\n    return html `\n        ${storyStyles}\n        <style>\n            sp-tooltip {\n                transition: none;\n            }\n        </style>\n        <overlay-drag>\n            <overlay-trigger class=\"demo top-left\" placement=\"bottom\">\n                <overlay-target-icon slot=\"trigger\"></overlay-target-icon>\n                <sp-tooltip slot=\"hover-content\" delayed open tip=\"bottom\">\n                    Click to open popover\n                </sp-tooltip>\n                <sp-popover\n                    dialog\n                    slot=\"click-content\"\n                    position=\"bottom\"\n                    tip\n                    open\n                >\n                    <div class=\"options-popover-content\">\n                        <sp-slider\n                            value=\"5\"\n                            step=\"0.5\"\n                            min=\"0\"\n                            max=\"20\"\n                            label=\"Awesomeness\"\n                        ></sp-slider>\n                        <div id=\"styled-div\">\n                            The background of this div should be blue\n                        </div>\n                        <overlay-trigger id=\"inner-trigger\" placement=\"bottom\">\n                            <sp-button slot=\"trigger\">Press Me</sp-button>\n                            <sp-popover\n                                dialog\n                                slot=\"click-content\"\n                                placement=\"bottom\"\n                                tip\n                                open\n                            >\n                                <div class=\"options-popover-content\">\n                                    Another Popover\n                                </div>\n                            </sp-popover>\n\n                            <sp-tooltip\n                                slot=\"hover-content\"\n                                delayed\n                                open\n                                tip=\"bottom\"\n                            >\n                                Click to open another popover.\n                            </sp-tooltip>\n                        </overlay-trigger>\n                    </div>\n                </sp-popover>\n            </overlay-trigger>\n        </overlay-drag>\n    `;\n};\nexport const sideHoverDraggable = () => {\n    return html `\n        <style>\n            sp-tooltip {\n                transition: none;\n            }\n        </style>\n        <overlay-drag>\n            <overlay-trigger placement=\"right\">\n                <overlay-target-icon slot=\"trigger\"></overlay-target-icon>\n                <sp-tooltip slot=\"hover-content\" delayed open tip=\"right\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Vivamus egestas sed enim sed condimentum. Nunc facilisis\n                    scelerisque massa sed luctus. Orci varius natoque penatibus\n                    et magnis dis parturient montes, nascetur ridiculus mus.\n                    Suspendisse sagittis sodales purus vitae ultricies. Integer\n                    at dui sem. Sed quam tortor, ornare in nisi et, rhoncus\n                    lacinia mauris. Sed vel rutrum mauris, ac pellentesque nibh.\n                    Sed feugiat semper libero, sit amet vehicula orci fermentum\n                    id. Vivamus imperdiet egestas luctus. Mauris tincidunt\n                    malesuada ante, faucibus viverra nunc blandit a. Fusce et\n                    nisl nisi. Aenean dictum quam id mollis faucibus. Nulla a\n                    ultricies dui. In hac habitasse platea dictumst. Curabitur\n                    gravida lobortis vestibulum.\n                </sp-tooltip>\n            </overlay-trigger>\n        </overlay-drag>\n    `;\n};\n//# sourceMappingURL=overlay.stories.js.map"],"names":["OverlayTargetIcon","html","css","LitElement","customElements","define","OverlayDrag","top","left","event","target","slot","targetElement","undefined","slotElement","assignedNodes","find","node","HTMLElement","querySelector","this","addEventListener","_this2","onMouseDown","resetTargetPosition","parent","parentElement","max","x","offsetWidth","y","offsetHeight","dragStart","clientX","clientY","originalPos","onMouseMove","dragDelta","newPosition","_this3","Math","min","Overlay","update","document","onMouseUp","removeEventListener","style","transform","onSlotChange","__decorate","property","type","Number","RecursivePopover","depth","placement","value","onRadioChange","String","storyStyles","title","offset","number","colorOptions","Light","Dark","outter","color"],"mappings":"soFA0BA,IAEMA,wIAcSC,+CAZAC,cAFiBC,GAiChCC,eAAeC,OAAO,sBAAuBL,OAEvCM,yFAEMC,IAAM,MAENC,KAAO,4DAqBMC,iBACZA,EAAMC,YAGLC,EAAOF,EAAMC,YACdE,mBAAgBC,MAGfC,EADQH,EAAKI,gBACOC,MACtB,SAACC,UAASA,aAAgBC,eAEzBJ,SAEAF,cAAgBE,EAAYK,cAC7B,oBAECC,KAAKR,qBAELA,cAAcS,iBAAiB,aAAa,SAACZ,UAC9Ca,EAAKC,YAAYd,WAGhBe,6DAGWf,cACVC,EAASD,EAAMC,OACfe,EAASf,EAAOgB,iBACjBD,OAECE,EAAM,CACRC,EAAGH,EAAOI,YAAcnB,EAAOmB,YAC/BC,EAAGL,EAAOM,aAAerB,EAAOqB,cAE9BC,EACCvB,EAAMwB,QADPD,EAECvB,EAAMyB,QAEPC,EACCf,KAAKZ,KADN2B,EAECf,KAAKb,IAGN6B,EAAc,SAAC3B,OACX4B,EACC5B,EAAMwB,QAAUD,EADjBK,EAEC5B,EAAMyB,QAAUF,EAEjBM,EAAc,CAChBV,EAAGS,EAAcF,EACjBL,EAAGO,EAAcF,GAErBI,EAAK/B,KAAOgC,KAAKC,IAAID,KAAKb,IAAIW,EAAYV,EAAG,GAAID,EAAIC,GACrDW,EAAKhC,IAAMiC,KAAKC,IAAID,KAAKb,IAAIW,EAAYR,EAAG,GAAIH,EAAIG,GACpDY,EAAQC,UAQZC,SAASvB,iBAAiB,YAAae,GACvCQ,SAASvB,iBAAiB,WANR,SAAZwB,IACFD,SAASE,oBAAoB,YAAaV,GAC1CQ,SAASE,oBAAoB,UAAWD,wDAQvCzB,KAAKR,mBACJF,EAASU,KAAKR,cACda,EAASf,EAAOgB,cACjBD,SAEAjB,MAAQiB,EAAOI,YAAcnB,EAAOmB,aAAe,OACnDtB,KAAOkB,EAAOM,aAAerB,EAAOqB,cAAgB,sCAIrDX,KAAKR,qBACAA,cAAcmC,MAAMC,8BAAyB5B,KAAKZ,oBAAWY,KAAKb,oDAKpEN,MACiBmB,KAAK6B,sDApGtB/C,cATWC,GAEtB+C,EAAA,CADCC,EAAS,CAAEC,KAAMC,oCAGlBH,EAAA,CADCC,EAAS,CAAEC,KAAMC,qCA8GtBjD,eAAeC,OAAO,eAAgBC,OAEhCgD,8EAKMC,MAAQ,IAmBPC,UAAY,UACZD,MAAQ,2DAGI9C,OACXC,EAASD,EAAMC,YAChB8C,UAAY9C,EAAO+C,8CAIjBxD,MACyBmB,KAAKoC,UACTpC,KAAKsC,cAGLtC,KAAKsC,cAGLtC,KAAKsC,cAGLtC,KAAKsC,cAICtC,KAAKoC,UAKdpC,KAAKoC,UAIhBpC,KAAKmC,MAlNT,EAmNQtD,MAEoBmB,KAAKoC,UACRpC,KAAKmC,MAAQ,GAG9BtD,+CAzDX,CACHC,eATmBC,4pSAE3B+C,EAAA,CADCC,EAAS,CAAEC,KAAMO,0CAIlBT,EAAA,CADCC,EAAS,CAAEC,KAAMC,sCAqEtBjD,eAAeC,OAAO,oBAAqBiD,GClO3C,IAAMM,EAAc3D,mBAqCL,CACX4D,MAAO,wCAIDL,IACF,YACA,CACI,MACA,YACA,UACA,SACA,eACA,aACA,OACA,aACA,WACA,QACA,cACA,YACA,OACA,wBAEA,QAEJ,UAGEM,EAASC,EAAO,SAAU,UAEzB9D,MACD2D,EAGeJ,EACHM,yBAuDK,eACjBE,GACFC,MAAO,QACPC,KAAM,yBAINF,EACAA,SAEEG,YAASC,wBACRnE,MACD2D,qBAeW,kBACV3D,uBAiEY,kBACZA,MACD2D,8BA4DwB,kBACvB3D"}