{"version":3,"file":"status-light.stories-a2b28ecc.js","sources":["../../../../packages/status-light/lib/status-light.css.js","../../../../packages/status-light/lib/status-light.js","../../../../packages/status-light/lib/index.js","../../../../packages/status-light/stories/status-light.stories.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n#root{min-height:var(--spectrum-statuslight-height,var(--spectrum-alias-single-line-height));display:flex;flex-direction:row;align-items:flex-start;padding:var(--spectrum-global-dimension-size-75) 0;box-sizing:border-box;font-size:var(--spectrum-statuslight-text-size,var(--spectrum-alias-font-size-default));font-weight:var(--spectrum-statuslight-text-font-weight,var(--spectrum-alias-body-text-font-weight));color:var(--spectrum-statuslight-text-color,var(--spectrum-alias-text-color))}#root:before{content:\"\";flex-grow:0;flex-shrink:0;display:inline-block;width:var(--spectrum-statuslight-dot-size,var(--spectrum-global-dimension-size-100));height:var(--spectrum-statuslight-dot-size,var(--spectrum-global-dimension-size-100));border-radius:50%;margin:var(--spectrum-global-dimension-size-75) var(--spectrum-statuslight-text-gap,var(--spectrum-global-dimension-size-150))}:host([variant=neutral]) #root{font-style:italic;color:var(--spectrum-statuslight-neutral-text-color,var(--spectrum-global-color-gray-700))}#root[disabled],:host([disabled]) #root{color:var(--spectrum-statuslight-text-color-disabled,var(--spectrum-alias-text-color-disabled))}#root[disabled]:before,:host([disabled]) #root:before{background-color:var(--spectrum-statuslight-dot-color-disabled,var(--spectrum-global-color-gray-400))}:host([variant=negative]) #root:before{background-color:var(--spectrum-statuslight-negative-dot-color,var(--spectrum-semantic-negative-color-status))}:host([variant=notice]) #root:before{background-color:var(--spectrum-statuslight-notice-dot-color,var(--spectrum-semantic-notice-color-status))}:host([variant=positive]) #root:before{background-color:var(--spectrum-statuslight-positive-dot-color,var(--spectrum-semantic-positive-color-status))}.spectrum-StatusLight--active:before,:host([variant=info]) #root:before{background-color:var(--spectrum-statuslight-info-dot-color,var(--spectrum-semantic-informative-color-status))}:host([variant=neutral]) #root:before{background-color:var(--spectrum-statuslight-neutral-dot-color,var(--spectrum-global-color-gray-500))}:host([variant=celery]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-celery,var(--spectrum-global-color-celery-400))}:host([variant=yellow]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-yellow,var(--spectrum-global-color-yellow-400))}:host([variant=fuchsia]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-fuchsia,var(--spectrum-global-color-fuchsia-400))}:host([variant=indigo]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-indigo,var(--spectrum-global-color-indigo-400))}:host([variant=seafoam]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-seafoam,var(--spectrum-global-color-seafoam-400))}:host([variant=chartreuse]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-chartreuse,var(--spectrum-global-color-chartreuse-400))}:host([variant=magenta]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-magenta,var(--spectrum-global-color-magenta-400))}:host([variant=purple]) #root:before{background-color:var(--spectrum-statuslight-dot-color-label-purple,var(--spectrum-global-color-purple-400))}\n`;\nexport default styles;\n//# sourceMappingURL=status-light.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, property, } from 'lit-element';\nimport statusLightStyles from './status-light.css.js';\n/**\n * A Spectrum status light control.\n * @element sp-status-light\n */\nexport class StatusLight extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The visual variant to apply to this status light.\n         */\n        this.variant = 'neutral';\n    }\n    static get styles() {\n        return [statusLightStyles];\n    }\n    render() {\n        return html `\n            <div id=\"root\">\n                <slot></slot>\n            </div>\n        `;\n    }\n}\n__decorate([\n    property({ reflect: true })\n], StatusLight.prototype, \"variant\", void 0);\n//# sourceMappingURL=status-light.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport * from './status-light.js';\nimport { StatusLight } from './status-light.js';\n/* istanbul ignore else */\nif (!customElements.get('sp-status-light')) {\n    customElements.define('sp-status-light', StatusLight);\n}\n//# sourceMappingURL=index.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html } from 'lit-html';\nimport '../';\nexport default {\n    component: 'sp-status-light',\n    title: 'StatusLight',\n};\nexport const allVariants = () => html `\n    <sp-status-light variant=\"positive\">positive</sp-status-light>\n    <sp-status-light variant=\"negative\">negative</sp-status-light>\n    <sp-status-light variant=\"notice\">notice</sp-status-light>\n    <sp-status-light variant=\"info\">info</sp-status-light>\n    <sp-status-light variant=\"neutral\">neutral</sp-status-light>\n    <sp-status-light variant=\"yellow\">yellow</sp-status-light>\n    <sp-status-light variant=\"fuchsia\">fuchsia</sp-status-light>\n    <sp-status-light variant=\"indigo\">indigo</sp-status-light>\n    <sp-status-light variant=\"seafoam\">seafoam</sp-status-light>\n    <sp-status-light variant=\"chartreuse\">chartreuse</sp-status-light>\n    <sp-status-light variant=\"magenta\">magenta</sp-status-light>\n    <sp-status-light variant=\"celery\">celery</sp-status-light>\n    <sp-status-light variant=\"purple\">purple</sp-status-light>\n`;\nexport const disabledTrue = () => html `\n    <sp-status-light variant=\"positive\" disabled>\n        positive\n    </sp-status-light>\n`;\ndisabledTrue.story = {\n    name: 'disabled: true',\n};\n//# sourceMappingURL=status-light.stories.js.map"],"names":["styles","css","StatusLight","variant","html","statusLightStyles","LitElement","__decorate","property","reflect","customElements","get","define","component","title","story","name"],"mappings":"ykHAYA,IAAMA,EAASC,4GCaFC,EAAb,uFASWC,QAaU,qEAGNC,8CAvBA,CAACC,SAFhB,CAAiCC,m+BAS7BC,EAAA,CADCC,EAAS,CAAEC,SAAS,mCCjBpBC,eAAeC,IAAI,oBACpBD,eAAeE,OAAO,kBAAmBV,eCF9B,CACXW,UAAW,kBACXC,MAAO,iCAGgB,kBAAsBV,4BAgBrB,kBAAsBA,UAMrCW,MAAQ,CACjBC,KAAM"}