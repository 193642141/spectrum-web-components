{"version":3,"file":"overlay.stories-38cbfd46.js","sources":["../../../packages/overlay/lib/overlay-trigger.css.js","../../../packages/overlay/lib/calculate-position.js","../../../packages/overlay/lib/active-overlay.css.js","../../../packages/overlay/lib/active-overlay.js","../../../packages/overlay/lib/overlay-trigger.js","../../../packages/overlay/lib/overlay-stack.js","../../../packages/overlay/lib/overlay-root.js","../../../packages/overlay/lib/index.js","../../../packages/overlay/stories/overlay.stories.js"],"sourcesContent":["/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n:host([disabled]) #trigger{pointer-events:none}#overlay-content{display:none}\n`;\nexport default styles;\n//# sourceMappingURL=overlay-trigger.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nconst AXIS = {\n    bottom: 'top',\n    left: 'left',\n    right: 'left',\n    top: 'top',\n};\nconst FLIPPED_DIRECTION = {\n    bottom: 'top',\n    left: 'right',\n    right: 'left',\n    top: 'bottom',\n};\nconst CROSS_AXIS = {\n    left: 'top',\n    top: 'left',\n};\nconst AXIS_SIZE = {\n    left: 'width',\n    top: 'height',\n};\nconst PARSED_PLACEMENT_CACHE = {};\nfunction getContainerDimensions(containerDOMNode) {\n    let width;\n    let height;\n    let top = 0;\n    let left = 0;\n    const scroll = { top: 0, left: 0 };\n    if (containerDOMNode.tagName === 'BODY') {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        if (containerDOMNode.ownerDocument) {\n            scroll.top =\n                containerDOMNode.ownerDocument.documentElement.scrollTop;\n            scroll.left =\n                containerDOMNode.ownerDocument.documentElement.scrollLeft;\n        }\n        else {\n            scroll.top = containerDOMNode.scrollTop;\n            scroll.left = containerDOMNode.scrollLeft;\n        }\n    }\n    else {\n        ({\n            width,\n            height,\n            top,\n            left,\n        } = containerDOMNode.getBoundingClientRect());\n        scroll.top = containerDOMNode.scrollTop;\n        scroll.left = containerDOMNode.scrollLeft;\n    }\n    return { width, height, scroll, top, left };\n}\nfunction getDelta(axis, offset, size, containerDimensions, padding) {\n    const containerScroll = containerDimensions.scroll[axis];\n    const containerHeight = containerDimensions[AXIS_SIZE[axis]];\n    const startEdgeOffset = offset - padding - containerScroll;\n    const endEdgeOffset = offset + padding - containerScroll + size;\n    if (startEdgeOffset < 0) {\n        return -startEdgeOffset;\n    }\n    else if (endEdgeOffset > containerHeight) {\n        return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n    }\n    else {\n        return 0;\n    }\n}\nfunction shouldFlip(axis, offset, size, padding, placement, flipContainerDimensions, containerOffsetWithBoundary) {\n    const containerScroll = flipContainerDimensions.scroll[axis];\n    const containerHeight = flipContainerDimensions[AXIS_SIZE[axis]];\n    const startEdgeOffset = containerOffsetWithBoundary[axis] + offset - padding - containerScroll;\n    const endEdgeOffset = containerOffsetWithBoundary[axis] +\n        offset +\n        padding -\n        containerScroll +\n        size;\n    if (startEdgeOffset < 0 && (placement === 'top' || placement === 'left')) {\n        return true;\n    }\n    else if (endEdgeOffset > containerHeight &&\n        (placement === 'bottom' || placement === 'right')) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction getMargins(node) {\n    const style = window.getComputedStyle(node);\n    return {\n        bottom: parseInt(style.marginBottom, 10) || 0,\n        left: parseInt(style.marginLeft, 10) || 0,\n        right: parseInt(style.marginRight, 10) || 0,\n        top: parseInt(style.marginTop, 10) || 0,\n    };\n}\nfunction parsePlacement(input) {\n    if (PARSED_PLACEMENT_CACHE[input]) {\n        return PARSED_PLACEMENT_CACHE[input];\n    }\n    const [placement] = input.split(' ');\n    let [, crossPlacement] = input.split(' ');\n    const axis = AXIS[placement] || 'right';\n    const crossAxis = CROSS_AXIS[axis];\n    if (!AXIS[crossPlacement]) {\n        crossPlacement = 'center';\n    }\n    const size = AXIS_SIZE[axis];\n    const crossSize = AXIS_SIZE[crossAxis];\n    PARSED_PLACEMENT_CACHE[input] = {\n        axis,\n        crossAxis,\n        crossPlacement,\n        crossSize,\n        placement,\n        size,\n    };\n    return PARSED_PLACEMENT_CACHE[input];\n}\nfunction computePosition(childOffset, containerDimensions, overlaySize, placementInfo, offset, crossOffset) {\n    const { axis, crossAxis, crossPlacement, crossSize, size, placement, } = placementInfo;\n    const position = {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n    };\n    position[crossAxis] = childOffset[crossAxis] + crossOffset;\n    if (crossPlacement === 'center') {\n        position[crossAxis] +=\n            (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n    }\n    else if (crossPlacement !== crossAxis) {\n        position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];\n    }\n    // Ensure overlay sticks to target(ignore for overlays smaller than target)\n    if (childOffset[crossSize] < overlaySize[crossSize]) {\n        const positionForPositiveSideOverflow = Math.min(position[crossAxis], childOffset[crossAxis]);\n        position[crossAxis] = Math.max(positionForPositiveSideOverflow, childOffset[crossAxis] -\n            overlaySize[crossSize] +\n            childOffset[crossSize]);\n    }\n    position[axis] =\n        placement === axis\n            ? childOffset[axis] - overlaySize[size] - offset\n            : childOffset[axis] + childOffset[size] + offset;\n    return position;\n}\nexport function calculatePositionInternal(placementInput, containerDimensions, childOffset, overlaySize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset) {\n    let placementInfo = parsePlacement(placementInput);\n    const { axis, size, crossAxis, crossSize, placement, crossPlacement, } = placementInfo;\n    let position = computePosition(childOffset, containerDimensions, overlaySize, placementInfo, offset, crossOffset);\n    let normalizedOffset = offset;\n    // First check if placement should be flipped\n    if (flip &&\n        shouldFlip(axis, position[axis], overlaySize[size], padding, placement, boundaryDimensions, containerOffsetWithBoundary)) {\n        const flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}`);\n        const flippedAxis = flippedPlacementInfo.axis;\n        const flippedSize = flippedPlacementInfo.size;\n        const flippedPosition = computePosition(childOffset, containerDimensions, overlaySize, flippedPlacementInfo, -1 * offset, crossOffset);\n        // Check if flipped placement has enough space otherwise flip is not possible\n        if (!shouldFlip(flippedAxis, flippedPosition[flippedAxis], overlaySize[flippedSize], padding, FLIPPED_DIRECTION[placement], boundaryDimensions, containerOffsetWithBoundary)) {\n            placementInfo = flippedPlacementInfo;\n            position = flippedPosition;\n            normalizedOffset = -1 * offset;\n        }\n    }\n    let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    const maxHeight = Math.max(0, boundaryDimensions.height +\n        boundaryDimensions.top +\n        boundaryDimensions.scroll.top -\n        containerOffsetWithBoundary.top -\n        position.top -\n        margins.top -\n        margins.bottom -\n        padding);\n    overlaySize.height = Math.min(overlaySize.height, maxHeight);\n    position = computePosition(childOffset, containerDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset);\n    delta = delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n    position[crossAxis] += delta;\n    const arrowPosition = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n    };\n    arrowPosition[crossAxis] =\n        childOffset[crossSize] > overlaySize[crossSize]\n            ? null\n            : childOffset[crossAxis] -\n                position[crossAxis] +\n                childOffset[crossSize] / 2;\n    return {\n        arrowOffsetLeft: arrowPosition.left || 0,\n        arrowOffsetTop: arrowPosition.top || 0,\n        maxHeight,\n        placement: placementInfo.placement,\n        positionLeft: position.left || 0,\n        positionTop: position.top || 0,\n    };\n}\nfunction getShadowPosition(target, container) {\n    const targetPosition = target.getBoundingClientRect();\n    const containerPosition = container.getBoundingClientRect();\n    return {\n        bottom: targetPosition.bottom - containerPosition.bottom,\n        height: targetPosition.height,\n        left: targetPosition.left - containerPosition.left,\n        right: targetPosition.right - containerPosition.right,\n        top: targetPosition.top - containerPosition.top,\n        width: targetPosition.width,\n        x: targetPosition.x,\n        y: targetPosition.y,\n    };\n}\nexport default function calculatePosition(placementInput, overlayNode, target, container, padding, flip, boundariesElement, offset, crossOffset) {\n    const isBodyContainer = container.tagName === 'BODY';\n    const childOffset = isBodyContainer\n        ? target.getBoundingClientRect()\n        : getShadowPosition(target, container);\n    if (!isBodyContainer) {\n        childOffset.top += parseInt(target.style.marginTop, 10) || 0;\n        childOffset.left +=\n            parseInt(target.style.marginLeft, 10) || 0;\n    }\n    const { top, right, bottom, left, width, height, x, y, } = overlayNode.getBoundingClientRect();\n    const overlaySize = { top, right, bottom, left, width, height, x, y };\n    const margins = getMargins(overlayNode);\n    overlaySize.width += margins.left + margins.right;\n    overlaySize.height += margins.top + margins.bottom;\n    const containerDimensions = getContainerDimensions(container);\n    const boundaryContainer = container;\n    const boundaryDimensions = getContainerDimensions(boundaryContainer);\n    const containerOffsetWithBoundary = boundaryContainer.tagName === 'BODY'\n        ? container.getBoundingClientRect()\n        : getShadowPosition(container, boundaryContainer);\n    return calculatePositionInternal(placementInput, containerDimensions, childOffset, overlaySize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset);\n}\n//# sourceMappingURL=calculate-position.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from 'lit-element';\nconst styles = css `\n@keyframes spOverlayFadeIn{0%{opacity:0;transform:var(--animation-transform)}to{opacity:1;transform:translate(0)}}@keyframes spOverlayFadeOut{0%{opacity:1;transform:translate(0)}to{opacity:0;transform:var(--animation-transform)}}:host{z-index:2;position:absolute;display:none;opacity:0;top:-999em;left:-999em;animation-duration:var(--spectrum-global-animation-duration-100);animation-timing-function:ease-in-out}:host([state]){display:block}:host([state=visible]){opacity:1;transform:translate(0)!important;visibility:visible;animation-name:spOverlayFadeIn}:host([state=hiding]){animation-name:spOverlayFadeOut}:host([placement=top]){--animation-transform:translateY(6px)}:host([placement=right]){--animation-transform:translate(-6px)}:host([placement=bottom]){--animation-transform:translateY(-6px)}:host([placement=left]){--animation-transform:translate(6px)}\n`;\nexport default styles;\n//# sourceMappingURL=active-overlay.css.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport calculatePosition from './calculate-position.js';\nimport { html, LitElement, property, } from 'lit-element';\nimport styles from './active-overlay.css.js';\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve) => (this.resolveFn = resolve));\n    }\n    resolve(value) {\n        /* istanbul ignore else */\n        if (this.resolveFn) {\n            this.resolveFn(value);\n        }\n    }\n}\nconst defaultOptions = {\n    containerPadding: 10,\n    crossOffset: 0,\n    flip: true,\n    offset: 0,\n    placement: 'left',\n};\nconst FadeOutAnimation = 'spOverlayFadeOut';\nconst stateMachine = {\n    initial: 'idle',\n    states: {\n        idle: {\n            on: {\n                active: 'active',\n            },\n        },\n        active: {\n            on: {\n                visible: 'visible',\n                hiding: 'hiding',\n                idle: 'idle',\n            },\n        },\n        visible: {\n            on: {\n                hiding: 'hiding',\n                idle: 'idle',\n            },\n        },\n        hiding: {\n            on: {\n                idle: 'idle',\n            },\n        },\n    },\n};\nconst stateTransition = (state, event) => {\n    if (!state)\n        return stateMachine.initial;\n    /* istanbul ignore if */\n    if (!event)\n        return state;\n    return stateMachine.states[state].on[event] || state;\n};\nexport class ActiveOverlay extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._state = stateTransition();\n        this.placement = 'bottom';\n        this.offset = 6;\n        this.interaction = 'hover';\n        this.positionAnimationFrame = 0;\n        this.onAnimationEnd = (event) => {\n            if (this.hiddenDeferred && event.animationName === FadeOutAnimation) {\n                this.hiddenDeferred.resolve();\n            }\n        };\n    }\n    get state() {\n        return this._state;\n    }\n    set state(state) {\n        const nextState = stateTransition(this.state, state);\n        if (nextState === this.state) {\n            return;\n        }\n        this._state = nextState;\n        if (this.state === 'idle') {\n            this.removeAttribute('state');\n        }\n        else {\n            this.setAttribute('state', this.state);\n        }\n    }\n    get hasTheme() {\n        return !!this.color || !!this.size;\n    }\n    static get styles() {\n        return [styles];\n    }\n    open(openEvent) {\n        this.extractEventDetail(openEvent);\n        this.stealOverlayContent(openEvent.detail.content);\n        /* istanbul ignore if */\n        if (!this.overlayContent)\n            return;\n        this.state = 'active';\n        this.timeout = window.setTimeout(() => {\n            this.state = 'visible';\n            delete this.timeout;\n        }, openEvent.detail.delay);\n        this.hiddenDeferred = new Deferred();\n        this.addEventListener('animationend', this.onAnimationEnd);\n        this.hiddenDeferred.promise.then(() => {\n            this.removeEventListener('animationend', this.onAnimationEnd);\n        });\n    }\n    extractEventDetail(event) {\n        this.overlayContent = event.detail.content;\n        this.trigger = event.detail.trigger;\n        this.placement = event.detail.placement;\n        this.offset = event.detail.offset;\n        this.interaction = event.detail.interaction;\n        this.color = event.detail.theme.color;\n        this.size = event.detail.theme.size;\n    }\n    dispose() {\n        this.state = 'idle';\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            delete this.timeout;\n        }\n        this.returnOverlayContent();\n    }\n    stealOverlayContent(element) {\n        /* istanbul ignore if */\n        if (this.placeholder || !element)\n            return;\n        /* istanbul ignore else */\n        if (!this.placeholder) {\n            this.placeholder = document.createComment('placeholder for ' + element.nodeName);\n        }\n        /* istanbul ignore else */\n        if (element.parentElement) {\n            element.parentElement.replaceChild(this.placeholder, element);\n        }\n        this.overlayContent = element;\n        this.overlayContent.setAttribute('slot', 'overlay');\n        this.appendChild(this.overlayContent);\n    }\n    returnOverlayContent() {\n        /* istanbul ignore if */\n        if (!this.overlayContent)\n            return;\n        this.overlayContent.removeAttribute('slot');\n        /* istanbul ignore else */\n        if (this.placeholder && this.placeholder.parentElement) {\n            this.placeholder.parentElement.replaceChild(this.overlayContent, this.placeholder);\n        }\n        delete this.placeholder;\n    }\n    get hasSlotenOverlayContent() {\n        return !!(this.overlayContent && this.overlayContent.parentElement === this);\n    }\n    updateOverlayPosition() {\n        if (!this.trigger ||\n            !this.overlayContent ||\n            !this.hasSlotenOverlayContent ||\n            !this.root ||\n            !this.isConnected) {\n            return;\n        }\n        const options = {\n            containerPadding: 0,\n            crossOffset: 0,\n            flip: false,\n            offset: this.offset,\n            placement: this.placement,\n        };\n        const positionOptions = Object.assign(Object.assign({}, defaultOptions), options);\n        this.position = calculatePosition(positionOptions.placement, this.overlayContent, this.trigger, this.root, positionOptions.containerPadding, positionOptions.flip, this.root, positionOptions.offset, positionOptions.crossOffset);\n        this.style.setProperty('left', `${this.position.positionLeft}px`);\n        this.style.setProperty('top', `${this.position.positionTop}px`);\n    }\n    async hide() {\n        this.state = 'hiding';\n        /* istanbul ignore else */\n        if (this.hiddenDeferred) {\n            return this.hiddenDeferred.promise;\n        }\n    }\n    schedulePositionUpdate() {\n        // Edge needs a little time to update the DOM before computing the layout\n        cancelAnimationFrame(this.positionAnimationFrame);\n        this.positionAnimationFrame = requestAnimationFrame(() => this.updateOverlayPosition());\n    }\n    onSlotChange() {\n        this.schedulePositionUpdate();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.schedulePositionUpdate();\n    }\n    renderTheme(content) {\n        import('@spectrum-web-components/theme');\n        const color = this.color;\n        const size = this.size;\n        return html `\n            <sp-theme .color=${color} .size=${size}>\n                ${content}\n            </sp-theme>\n        `;\n    }\n    render() {\n        const content = html `\n            <slot @slotchange=${this.onSlotChange} name=\"overlay\"></slot>\n        `;\n        return this.hasTheme ? this.renderTheme(content) : content;\n    }\n    static create(openEvent, root) {\n        const overlay = new ActiveOverlay();\n        /* istanbul ignore else */\n        if (openEvent.detail.content) {\n            overlay.root = root;\n            overlay.open(openEvent);\n        }\n        return overlay;\n    }\n}\n__decorate([\n    property()\n], ActiveOverlay.prototype, \"_state\", void 0);\n__decorate([\n    property({ reflect: true })\n], ActiveOverlay.prototype, \"placement\", void 0);\n__decorate([\n    property({ attribute: false })\n], ActiveOverlay.prototype, \"color\", void 0);\n__decorate([\n    property({ attribute: false })\n], ActiveOverlay.prototype, \"size\", void 0);\n//# sourceMappingURL=active-overlay.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, property, } from 'lit-element';\nimport overlayTriggerStyles from './overlay-trigger.css.js';\nimport { OverlayRoot } from './overlay-root.js';\nlet overlayRoot;\n/**\n * A overlay trigger component for displaying overlays relative to other content.\n * @element overlay-trigger\n *\n * @slot hover-content - The content that will be displayed on hover\n * @slot click-content - The content that will be displayed on click\n */\nexport class OverlayTrigger extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.placement = 'bottom';\n        this.offset = 6;\n        this.disabled = false;\n    }\n    static get styles() {\n        return [overlayTriggerStyles];\n    }\n    onOverlayOpen(event, interaction) {\n        const isClick = interaction === 'click';\n        const overlayElement = isClick ? this.clickContent : this.hoverContent;\n        /* istanbul ignore if */\n        if (!overlayElement) {\n            return;\n        }\n        if (!overlayRoot) {\n            overlayRoot = new OverlayRoot();\n        }\n        const delayAttribute = overlayElement.getAttribute('delay');\n        const delay = delayAttribute ? parseFloat(delayAttribute) : 0;\n        const queryThemeDetail = {\n            color: undefined,\n            size: undefined,\n        };\n        const queryThemeEvent = new CustomEvent('query-theme', {\n            bubbles: true,\n            composed: true,\n            detail: queryThemeDetail,\n            cancelable: true,\n        });\n        this.dispatchEvent(queryThemeEvent);\n        const overlayOpenDetail = {\n            content: overlayElement,\n            delay: delay,\n            offset: this.offset,\n            placement: this.placement,\n            trigger: this,\n            interaction: interaction,\n            theme: queryThemeDetail,\n        };\n        const overlayOpenEvent = new CustomEvent('sp-overlay-open', {\n            bubbles: true,\n            composed: true,\n            detail: overlayOpenDetail,\n        });\n        this.dispatchEvent(overlayOpenEvent);\n    }\n    onOverlayClose(event, interaction) {\n        const isClick = interaction === 'click';\n        const overlayElement = isClick ? this.clickContent : this.hoverContent;\n        /* istanbul ignore if */\n        if (!overlayElement) {\n            return;\n        }\n        const overlayCloseDetail = {\n            content: overlayElement,\n        };\n        const overlayCloseEvent = new CustomEvent('sp-overlay-close', {\n            bubbles: true,\n            composed: true,\n            detail: overlayCloseDetail,\n        });\n        this.dispatchEvent(overlayCloseEvent);\n    }\n    onTriggerClick(event) {\n        /* istanbul ignore else */\n        if (this.clickContent) {\n            this.onOverlayOpen(event, 'click');\n        }\n    }\n    onTriggerMouseOver(event) {\n        /* istanbul ignore else */\n        if (this.hoverContent) {\n            this.onOverlayOpen(event, 'hover');\n        }\n    }\n    onTriggerMouseLeave(event) {\n        /* istanbul ignore else */\n        if (this.hoverContent) {\n            this.onOverlayClose(event, 'hover');\n        }\n    }\n    render() {\n        return html `\n            <div\n                id=\"trigger\"\n                @click=${this.onTriggerClick}\n                @mouseenter=${this.onTriggerMouseOver}\n                @mouseleave=${this.onTriggerMouseLeave}\n            >\n                <slot name=\"trigger\"></slot>\n            </div>\n            <div id=\"overlay-content\">\n                <slot\n                    @slotchange=${this.onClickSlotChange}\n                    name=\"click-content\"\n                ></slot>\n                <slot\n                    @slotchange=${this.onHoverSlotChange}\n                    name=\"hover-content\"\n                ></slot>\n            </div>\n        `;\n    }\n    onClickSlotChange(event) {\n        /* istanbul ignore if */\n        if (!event.target) {\n            return;\n        }\n        const slot = event.target;\n        const content = this.extractSlotContent(slot);\n        if (content) {\n            this.clickContent = content;\n        }\n    }\n    onHoverSlotChange(event) {\n        /* istanbul ignore if */\n        if (!event.target) {\n            return;\n        }\n        const slot = event.target;\n        const content = this.extractSlotContent(slot);\n        if (content) {\n            this.hoverContent = content;\n        }\n    }\n    extractSlotContent(slot) {\n        const nodes = slot.assignedNodes();\n        if (nodes.length) {\n            return nodes[0];\n        }\n        return null;\n    }\n    disconnectedCallback() {\n        /* istanbul ignore else */\n        if (this.clickContent) {\n            this.onOverlayClose(new Event('remove'), 'click');\n        }\n        if (this.hoverContent) {\n            this.onOverlayClose(new Event('remove'), 'hover');\n        }\n        super.disconnectedCallback();\n    }\n}\n__decorate([\n    property({ reflect: true })\n], OverlayTrigger.prototype, \"placement\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], OverlayTrigger.prototype, \"offset\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], OverlayTrigger.prototype, \"disabled\", void 0);\n//# sourceMappingURL=overlay-trigger.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { ActiveOverlay } from './active-overlay.js';\nfunction isLeftClick(event) {\n    return event.button === 0;\n}\nfunction hasModifier(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport class OverlayStack {\n    constructor(root, onChange) {\n        this.overlays = [];\n        this.preventMouseRootClose = false;\n        this.root = document.body;\n        this.handlingResize = false;\n        this.handleMouseCapture = (event) => {\n            const topOverlay = this.topOverlay;\n            if (!event.target ||\n                !topOverlay ||\n                !topOverlay.overlayContent ||\n                hasModifier(event) ||\n                !isLeftClick(event)) {\n                this.preventMouseRootClose = true;\n                return;\n            }\n            if (event.target instanceof Node) {\n                const path = event.composedPath();\n                if (path.indexOf(topOverlay.overlayContent) >= 0) {\n                    this.preventMouseRootClose = true;\n                    return;\n                }\n                this.preventMouseRootClose = false;\n            }\n        };\n        this.handleMouse = () => {\n            if (!this.preventMouseRootClose) {\n                this.closeTopOverlay();\n            }\n        };\n        this.handleKeyUp = (event) => {\n            if (event.key === 'Escape') {\n                this.closeTopOverlay();\n            }\n        };\n        this.handleResize = () => {\n            if (this.handlingResize)\n                return;\n            this.handlingResize = true;\n            requestAnimationFrame(() => {\n                this.overlays.forEach((overlay) => {\n                    overlay.updateOverlayPosition();\n                });\n                this.handlingResize = false;\n            });\n        };\n        this.root = root;\n        this.onChange = onChange;\n        this.addEventListeners();\n    }\n    get document() {\n        return this.root.ownerDocument || document;\n    }\n    get topOverlay() {\n        return this.overlays.slice(-1)[0];\n    }\n    addEventListeners() {\n        this.document.addEventListener('click', this.handleMouseCapture, true);\n        this.document.addEventListener('click', this.handleMouse);\n        this.document.addEventListener('keyup', this.handleKeyUp);\n        window.addEventListener('resize', this.handleResize);\n    }\n    isOverlayActive(overlayContent) {\n        return !!this.overlays.find((item) => overlayContent.isSameNode(item.overlayContent));\n    }\n    isClickOverlayActiveForTrigger(trigger) {\n        return this.overlays.some((item) => trigger.isSameNode(item.trigger) &&\n            item.interaction === 'click');\n    }\n    openOverlay(event) {\n        if (this.isOverlayActive(event.detail.content))\n            return;\n        requestAnimationFrame(() => {\n            const interaction = event.detail.interaction;\n            if (interaction === 'click') {\n                this.closeAllHoverOverlays();\n            }\n            else if (interaction === 'hover' &&\n                this.isClickOverlayActiveForTrigger(event.detail.trigger)) {\n                // Don't show a hover popover if the click popover is already active\n                return;\n            }\n            const activeOverlay = ActiveOverlay.create(event, this.root);\n            this.overlays.push(activeOverlay);\n            this.onChange(this.overlays);\n        });\n    }\n    closeOverlay(event) {\n        requestAnimationFrame(() => {\n            const overlayContent = event.detail.content;\n            const overlay = this.overlays.find((item) => overlayContent.isSameNode(item.overlayContent));\n            this.hideAndCloseOverlay(overlay);\n        });\n    }\n    closeAllHoverOverlays() {\n        for (const overlay of this.overlays) {\n            if (overlay.interaction === 'hover') {\n                this.hideAndCloseOverlay(overlay);\n            }\n        }\n    }\n    async hideAndCloseOverlay(overlay) {\n        if (overlay) {\n            await overlay.hide();\n            const index = this.overlays.indexOf(overlay);\n            /* istanbul ignore else */\n            if (index >= 0) {\n                this.overlays[index].dispose();\n                this.overlays.splice(index, 1);\n            }\n            this.onChange(this.overlays);\n        }\n    }\n    closeTopOverlay() {\n        return this.hideAndCloseOverlay(this.topOverlay);\n    }\n}\n//# sourceMappingURL=overlay-stack.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { ActiveOverlay } from './active-overlay.js';\nimport { OverlayStack } from './overlay-stack.js';\nexport class OverlayRoot {\n    constructor() {\n        this.onOverlayOpen = (event) => {\n            event.stopPropagation();\n            this.overlayStack.openOverlay(event);\n        };\n        this.onOverlayClose = (event) => {\n            event.stopPropagation();\n            this.overlayStack.closeOverlay(event);\n        };\n        this.onOverlayStackChange = (activeOverlays) => {\n            // Remove inactive overlays\n            const activeSet = new Set(activeOverlays);\n            for (const child of document.body.children) {\n                if (child instanceof ActiveOverlay && !activeSet.has(child)) {\n                    document.body.removeChild(child);\n                }\n            }\n            // Append new overlays\n            for (const overlay of activeOverlays) {\n                if (overlay.parentElement !== document.body) {\n                    overlay.setAttribute('slot', 'overlays');\n                    document.body.append(overlay);\n                }\n            }\n        };\n        this.overlayStack = new OverlayStack(document.body, this.onOverlayStackChange);\n        this.listen();\n    }\n    listen() {\n        document.body.addEventListener('sp-overlay-open', this.onOverlayOpen, true);\n        document.body.addEventListener('sp-overlay-close', this.onOverlayClose, true);\n    }\n}\n//# sourceMappingURL=overlay-root.js.map","/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { OverlayTrigger } from './overlay-trigger.js';\nimport { ActiveOverlay } from './active-overlay.js';\nexport * from './overlay-root.js';\nexport * from './overlay-trigger.js';\n/* istanbul ignore else */\nif (!customElements.get('overlay-trigger')) {\n    customElements.define('overlay-trigger', OverlayTrigger);\n}\n/* istanbul ignore else */\nif (!customElements.get('active-overlay')) {\n    customElements.define('active-overlay', ActiveOverlay);\n}\n//# sourceMappingURL=index.js.map","import { __decorate } from \"tslib\";\n/*\nCopyright 2019 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, number, radios } from '@open-wc/demoing-storybook';\nimport { LitElement, css, property, } from 'lit-element';\nimport '../';\nimport '../../button';\nimport '../../popover';\nimport '../../slider';\nimport '../../radio';\nimport '../../radio-group';\nimport '../../tooltip';\nimport '../../theme';\n// Prevent infinite recursion in browser\nconst MAX_DEPTH = 7;\nclass RecursivePopover extends LitElement {\n    constructor() {\n        super();\n        this.depth = 0;\n        this.placement = 'right';\n        this.depth = 0;\n    }\n    static get styles() {\n        return [\n            css `\n                :host {\n                    display: block;\n                    text-align: center;\n                }\n\n                sp-button {\n                    margin-top: 11px;\n                }\n            `,\n        ];\n    }\n    onRadioChange(event) {\n        const target = event.target;\n        this.placement = target.value;\n    }\n    render() {\n        return html `\n            <sp-radio-group selected=\"${this.placement}\" name=\"group-example\">\n                <sp-radio @change=${this.onRadioChange} value=\"top\">\n                    Top\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"right\">\n                    Right\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"bottom\">\n                    Bottom\n                </sp-radio>\n                <sp-radio @change=${this.onRadioChange} value=\"left\">\n                    Left\n                </sp-radio>\n            </sp-radio-group>\n            <overlay-trigger placement=\"${this.placement}\">\n                <sp-button slot=\"trigger\" variant=\"cta\">Open Popover</sp-button>\n                <sp-popover\n                    dialog\n                    slot=\"click-content\"\n                    direction=\"${this.placement}\"\n                    tip\n                    open\n                >\n                    ${this.depth < MAX_DEPTH\n            ? html `\n                              <recursive-popover\n                                  position=\"${this.placement}\"\n                                  depth=\"${this.depth + 1}\"\n                              ></recursive-popover>\n                          `\n            : html `\n                              <div>Maximum Depth</div>\n                          `}\n                </sp-popover>\n            </overlay-trigger>\n        `;\n    }\n}\n__decorate([\n    property({ type: String })\n], RecursivePopover.prototype, \"placement\", void 0);\n__decorate([\n    property({ type: Number })\n], RecursivePopover.prototype, \"depth\", void 0);\ncustomElements.define('recursive-popover', RecursivePopover);\nconst storyStyles = html `\n    <style>\n        html,\n        body,\n        #root,\n        #root-inner,\n        #root-theme {\n            height: 100%;\n            margin: 0;\n        }\n\n        #root-theme {\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            height: 100%;\n            align-items: center;\n            justify-content: center;\n        }\n\n        overlay-trigger {\n            flex: none;\n        }\n\n        #styled-div {\n            background-color: blue;\n            color: white;\n            padding: 4px 10px;\n            margin-bottom: 10px;\n        }\n\n        #inner-trigger {\n            display: inline-block;\n        }\n    </style>\n`;\nexport default {\n    title: 'Overlay',\n};\nexport const Default = () => {\n    const positionOptions = {\n        top: 'top',\n        bottom: 'bottom',\n        left: 'left',\n        right: 'right',\n    };\n    const placement = radios('Type', positionOptions, positionOptions.bottom);\n    const offset = number('Offset', 6);\n    return html `\n        ${storyStyles}\n        <overlay-trigger\n            id=\"trigger\"\n            placement=\"${placement}\"\n            offset=\"${offset}\"\n        >\n            <sp-button variant=\"primary\" slot=\"trigger\">\n                Show Popover\n            </sp-button>\n            <sp-popover\n                dialog\n                slot=\"click-content\"\n                direction=\"${placement}\"\n                tip\n                open\n            >\n                <div class=\"options-popover-content\">\n                    <sp-slider\n                        value=\"5\"\n                        step=\"0.5\"\n                        min=\"0\"\n                        max=\"20\"\n                        label=\"Awesomeness\"\n                    ></sp-slider>\n                    <div id=\"styled-div\">\n                        The background of this div should be blue\n                    </div>\n                    <overlay-trigger id=\"inner-trigger\" placement=\"bottom\">\n                        <sp-button slot=\"trigger\">Press Me</sp-button>\n                        <sp-popover\n                            dialog\n                            slot=\"click-content\"\n                            direction=\"bottom\"\n                            tip\n                            open\n                        >\n                            <div class=\"options-popover-content\">\n                                Another Popover\n                            </div>\n                        </sp-popover>\n\n                        <sp-tooltip\n                            slot=\"hover-content\"\n                            delay=\"100\"\n                            open\n                            tip=\"bottom\"\n                        >\n                            Click to open another popover.\n                        </sp-tooltip>\n                    </overlay-trigger>\n                </div>\n            </sp-popover>\n            <sp-tooltip open slot=\"hover-content\" delay=\"100\" tip=\"bottom\">\n                Click to open a popover.\n            </sp-tooltip>\n        </overlay-trigger>\n    `;\n};\nexport const deepNesting = () => {\n    const colorOptions = {\n        Light: 'light',\n        Dark: 'dark',\n    };\n    const color = radios('Color stop', colorOptions, colorOptions.Light);\n    const outter = color === 'light' ? 'dark' : 'light';\n    return html `\n        ${storyStyles}\n        <sp-theme color=${outter}>\n            <sp-theme color=${color}>\n                <recursive-popover\n                    style=\"\n                        background-color: var(--spectrum-global-color-gray-100);\n                        color: var(--spectrum-global-color-gray-800);\n                        padding: var(--spectrum-global-dimension-size-225);\n                    \"\n                ></recursive-popover>\n            </sp-theme>\n        </sp-theme>\n    `;\n};\nexport const edges = () => {\n    return html `\n        <style>\n            .demo {\n                position: absolute;\n            }\n            .top-left {\n                top: 0;\n                left: 0;\n            }\n            .top-right {\n                top: 0;\n                right: 0;\n            }\n            .bottom-right {\n                bottom: 0;\n                right: 0;\n            }\n            .bottom-left {\n                bottom: 0;\n                left: 0;\n            }\n        </style>\n        <overlay-trigger class=\"demo top-left\" placement=\"bottom\">\n            <sp-button slot=\"trigger\">\n                Top/\n                <br />\n                Left\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delay=\"100\" open tip=\"bottom\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger class=\"demo top-right\" placement=\"bottom\">\n            <sp-button slot=\"trigger\">\n                Top/\n                <br />\n                Right\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delay=\"100\" open tip=\"bottom\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger class=\"demo bottom-left\" placement=\"top\">\n            <sp-button slot=\"trigger\">\n                Bottom/\n                <br />\n                Left\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delay=\"100\" open tip=\"top\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n        <overlay-trigger placement=\"top\" class=\"demo bottom-right\">\n            <sp-button slot=\"trigger\">\n                Bottom/\n                <br />\n                Right\n            </sp-button>\n            <sp-tooltip slot=\"hover-content\" delay=\"100\" open tip=\"top\">\n                Triskaidekaphobia and More\n            </sp-tooltip>\n        </overlay-trigger>\n    `;\n};\n//# sourceMappingURL=overlay.stories.js.map"],"names":["styles","css","AXIS","bottom","left","right","top","FLIPPED_DIRECTION","CROSS_AXIS","AXIS_SIZE","PARSED_PLACEMENT_CACHE","getContainerDimensions","containerDOMNode","width","height","scroll","tagName","window","innerWidth","innerHeight","ownerDocument","documentElement","scrollTop","scrollLeft","getBoundingClientRect","getDelta","axis","offset","size","containerDimensions","padding","containerScroll","containerHeight","startEdgeOffset","endEdgeOffset","Math","max","shouldFlip","placement","flipContainerDimensions","containerOffsetWithBoundary","parsePlacement","input","split","crossPlacement","crossAxis","crossSize","computePosition","childOffset","overlaySize","placementInfo","crossOffset","position","positionForPositiveSideOverflow","min","getShadowPosition","target","container","targetPosition","containerPosition","x","y","calculatePosition","placementInput","overlayNode","flip","boundariesElement","isBodyContainer","parseInt","style","marginTop","marginLeft","node","margins","getComputedStyle","marginBottom","marginRight","boundaryContainer","boundaryDimensions","normalizedOffset","flippedPlacementInfo","flippedAxis","flippedSize","flippedPosition","delta","maxHeight","arrowPosition","arrowOffsetLeft","arrowOffsetTop","positionLeft","positionTop","calculatePositionInternal","Deferred","[object Object]","promise","Promise","resolve","this","resolveFn","value","overlayRoot","defaultOptions","containerPadding","FadeOutAnimation","stateMachine","initial","states","idle","on","active","visible","hiding","stateTransition","state","event","ActiveOverlay","LitElement","_state","interaction","positionAnimationFrame","onAnimationEnd","hiddenDeferred","animationName","nextState","removeAttribute","setAttribute","color","openEvent","extractEventDetail","stealOverlayContent","detail","content","overlayContent","timeout","setTimeout","delay","addEventListener","then","removeEventListener","trigger","theme","clearTimeout","returnOverlayContent","element","placeholder","document","createComment","nodeName","parentElement","replaceChild","appendChild","hasSlotenOverlayContent","root","isConnected","options","positionOptions","Object","assign","setProperty","_this","cancelAnimationFrame","requestAnimationFrame","updateOverlayPosition","schedulePositionUpdate","connectedCallback","html","onSlotChange","hasTheme","renderTheme","overlay","open","__decorate","property","reflect","attribute","OverlayStack","onChange","overlays","preventMouseRootClose","body","handlingResize","handleMouseCapture","topOverlay","metaKey","altKey","ctrlKey","shiftKey","hasModifier","button","isLeftClick","Node","composedPath","indexOf","handleMouse","closeTopOverlay","handleKeyUp","key","handleResize","forEach","addEventListeners","slice","find","item","isSameNode","some","isOverlayActive","closeAllHoverOverlays","isClickOverlayActiveForTrigger","activeOverlay","create","push","hideAndCloseOverlay","hide","index","dispose","splice","OverlayRoot","onOverlayOpen","stopPropagation","overlayStack","openOverlay","onOverlayClose","closeOverlay","onOverlayStackChange","activeOverlays","activeSet","Set","child","children","has","removeChild","append","listen","OverlayTrigger","disabled","overlayTriggerStyles","overlayElement","clickContent","hoverContent","delayAttribute","getAttribute","parseFloat","queryThemeDetail","undefined","queryThemeEvent","CustomEvent","bubbles","composed","cancelable","dispatchEvent","overlayOpenDetail","overlayOpenEvent","overlayCloseEvent","onTriggerClick","onTriggerMouseOver","onTriggerMouseLeave","onClickSlotChange","onHoverSlotChange","slot","extractSlotContent","nodes","assignedNodes","length","Event","disconnectedCallback","type","Number","Boolean","customElements","get","define","MAX_DEPTH","RecursivePopover","depth","onRadioChange","String","storyStyles","Default","number","deepNesting","colorOptions","Light","Dark","edges","title"],"mappings":"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"}